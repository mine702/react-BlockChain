[{"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\index.js":"1","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\App.js":"2","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\reportWebVitals.js":"3","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\MainPage.jsx":"4","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\HouseInfoPage.jsx":"5","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\UserMyPage.jsx":"6","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\NewMemberPage.jsx":"7","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\LoginPage.jsx":"8","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\registration\\HouseInfoUpdate.jsx":"9","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\UserUpdatePage.jsx":"10","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\registration\\HouseInfoInsert.jsx":"11","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\RoomList_Dialog.jsx":"12","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\Mainpage_Card.jsx":"13","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\BuyLogText.jsx":"14","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\Make_Chatting.jsx":"15","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\Mypage_BuyCard.jsx":"16","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\TransactionText.jsx":"17","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\Mypage_SellCard.jsx":"18","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\RoomList.jsx":"19","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\LogText.jsx":"20","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\Notify_Dialog.jsx":"21","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\Chatting.jsx":"22"},{"size":535,"mtime":1657611013995,"results":"23","hashOfConfig":"24"},{"size":1481,"mtime":1657611013946,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1657611013996,"results":"26","hashOfConfig":"24"},{"size":9426,"mtime":1657675946404,"results":"27","hashOfConfig":"24"},{"size":8976,"mtime":1657623197756,"results":"28","hashOfConfig":"24"},{"size":6970,"mtime":1657675973740,"results":"29","hashOfConfig":"24"},{"size":8772,"mtime":1657675957726,"results":"30","hashOfConfig":"24"},{"size":4941,"mtime":1657622099951,"results":"31","hashOfConfig":"24"},{"size":8046,"mtime":1657620789745,"results":"32","hashOfConfig":"24"},{"size":6541,"mtime":1657676060411,"results":"33","hashOfConfig":"24"},{"size":9864,"mtime":1657675908197,"results":"34","hashOfConfig":"24"},{"size":2889,"mtime":1657624049865,"results":"35","hashOfConfig":"24"},{"size":2603,"mtime":1657623401669,"results":"36","hashOfConfig":"24"},{"size":1131,"mtime":1657675375571,"results":"37","hashOfConfig":"24"},{"size":5307,"mtime":1657623582217,"results":"38","hashOfConfig":"24"},{"size":2881,"mtime":1657623645055,"results":"39","hashOfConfig":"24"},{"size":469,"mtime":1657624143693,"results":"40","hashOfConfig":"24"},{"size":2991,"mtime":1657623671041,"results":"41","hashOfConfig":"24"},{"size":3715,"mtime":1657624124933,"results":"42","hashOfConfig":"24"},{"size":365,"mtime":1657623344150,"results":"43","hashOfConfig":"24"},{"size":3579,"mtime":1657624304330,"results":"44","hashOfConfig":"24"},{"size":3849,"mtime":1657623307649,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"ffzs2p",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\index.js",[],["96","97"],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\App.js",[],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\reportWebVitals.js",[],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\MainPage.jsx",["98","99"],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\HouseInfoPage.jsx",["100","101","102"],"//#region react\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router\";\nimport Web3 from 'web3';\n//#endregion\n\n//#region mui\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport Container from '@mui/material/Container';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport CardActions from '@mui/material/CardActions';\nimport CardMedia from '@mui/material/CardMedia';\n//#endregion\n\n//#region component\nimport Make_Chatting from \"../ui/Make_Chatting\";\nimport Transaction_log from \"../ui/TransactionText\"\nimport BuyHouseContract from \"../../contracts/BuyHouse.json\"\n//#endregion\n\n//#region 전역변수\nlet web3;\nlet instance;\nlet All_record= [];\n//#endregion\n\nfunction HouseInfoPage() {\n\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    //#region useState 변수\n    const [sellername] = useState(location.state[0].name);\n    const [houseAddress] = useState(location.state[0].address)\n    const [buyername] = useState(location.state[1][0].name);\n\n    const [state, setState] = React.useState({\n        left: false\n    });\n    \n    const [transaction_record, setTransaction_record] = useState([]);\n    const [transaction_textlog, setTransaction_textlog] = useState([]);\n    //#endregion\n\n    //#region 메뉴바 control\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift') ) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n    //#endregion\n\n    //#region useEffect\n    //총 거래기록\n    useEffect(()=>{\n        for(let i=0; i<transaction_record.length; i++){\n            if(transaction_record[i].houseAddress === houseAddress){\n                All_record.push({sellerName : transaction_record[i].sellerName, buyerName: transaction_record[i].buyerName, housePrice : transaction_record[i].housePrice});\n                setTransaction_textlog(All_record); \n            }   \n        }\n    },[transaction_record]);\n\n    //로딩\n    useEffect(() => {\n        async function load() {          \n            web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = await BuyHouseContract.networks[networkId];      \n            instance = new web3.eth.Contract(BuyHouseContract.abi, deployedNetwork.address);\n            setTransaction_record(await instance.methods.readRealEstate().call());\n        }\n        \n        load();\n    }, [location]);   \n    //#endregion\n\n    //#region 렌더링\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={toggleDrawer(\"left\", true)}\n                        edge=\"start\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <SwipeableDrawer\n                        anchor=\"left\"\n                        open={state[\"left\"]}\n                        onClose={toggleDrawer(\"left\", false)}\n                        onOpen={toggleDrawer(\"left\", true)}\n                    >\n                        <Box\n                            sx={{ width: \"left\" === 'top' || \"left\" === 'bottom' ? 'auto' : 250 }}\n                            role=\"presentation\"\n                            onClick={toggleDrawer(\"left\", false)}\n                            onKeyDown={toggleDrawer(\"left\", false)}\n                        >\n                            <List>\n                                <ListItem key=\"마이페이지\" disablePadding sx={{ display: 'block' }}>\n                                    <Divider />\n                                    <ListItemButton>\n                                        <ListItemText onClick={() => {\n                                            navigate(\"/\")\n                                        }} primary=\"LogOut\" />\n                                    </ListItemButton>\n                                    <ListItemButton>\n                                        <ListItemText onClick={() => {\n                                            navigate(\"/post-MainPage\", { state: location.state[1] });\n                                        }} primary=\"MainPage\" />\n                                    </ListItemButton>\n                                </ListItem>\n                            </List>\n                        </Box>\n                    </SwipeableDrawer>\n\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ display: { xs: 'none', sm: 'block' } }}\n                    >\n                        Buy\n                    </Typography>&nbsp;\n                    <ShoppingCartIcon />\n                    <Box sx={{ flexGrow: 1 }} />\n                    접속중인 사람 : {location.state[1][0].name}\n                </Toolbar>\n            </AppBar>\n            <Box\n                sx={{\n                    bgcolor: 'background.paper',\n                    pt: 8,\n                    pb: 6,\n                }}\n            >\n                <Container>\n                    <Card\n                        sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n                    >\n                        <CardContent sx={{ flexGrow: 1 }}>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                판매자 정보\n                            </Typography>\n                            <Typography gutterBottom variant=\"h6\">\n                                &nbsp;&nbsp;이름 : {location.state[0].name}<br />\n                                &nbsp;&nbsp;전화번호 : {location.state[0].number}\n                            </Typography>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                가격\n                            </Typography>\n                            <Typography gutterBottom variant=\"h6\">\n                                &nbsp;&nbsp;{location.state[0].price} (ETH)\n                            </Typography>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                사진\n                            </Typography>\n                        </CardContent>\n                        <Container><Container><Container><Container><Container><Container><Container><Container><Container>\n                            <Card>\n                                <CardMedia\n                                    component=\"img\"\n                                    sx={{\n                                        pt: '0%',\n                                    }}\n                                    src={location.state[0].files}\n                                    alt=\"random\"\n                                />\n                            </Card>\n                        </Container></Container></Container></Container></Container></Container></Container></Container></Container>\n                        <CardContent sx={{ flexGrow: 1 }}>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                주소\n                            </Typography>\n                            <Typography>\n                                &nbsp;&nbsp;{location.state[0].address}\n                            </Typography>\n                            <br/>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                거래 기록\n                            </Typography>\n                            <Transaction_log log={transaction_textlog}></Transaction_log>\n                        </CardContent>\n                        <CardActions>\n                            <Box sx={{ flexGrow: 1 }} />\n                            <Make_Chatting sellername={sellername} buyername={buyername} ></Make_Chatting>\n                        </CardActions>\n                    </Card>\n                </Container>\n            </Box>\n        </Box>\n    );\n    //#endregion\n}\n\nexport default HouseInfoPage;","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\UserMyPage.jsx",["103","104","105"],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\NewMemberPage.jsx",[],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\LoginPage.jsx",[],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\registration\\HouseInfoUpdate.jsx",[],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\UserUpdatePage.jsx",["106","107","108"],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\page\\registration\\HouseInfoInsert.jsx",[],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\RoomList_Dialog.jsx",[],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\Mainpage_Card.jsx",["109","110","111","112","113","114"],"//#region react\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n//#endregion\n\n//#region mui\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardMedia from '@mui/material/CardMedia';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\n//#endregion\n\n//#region 하위 컴포넌트\nimport Notify_Dialog from \"./Notify_Dialog\";\n//#endregion\n\nfunction Mainpage_Card(props) {\n\n    const navigate = useNavigate();\n\n    const { cards, user, value } = props;\n\n    const buyButtonText={\n        a:'구매',\n        b:'판매 완료',\n    } \n\n    const buy_State_enum ={\n        a:'buy_Possible',\n        b:'buy_Impossible',\n    } \n\n    let buy_State = buyButtonText.a;\n\n    function buystate() {\n        if( buy_State == buyButtonText.a){\n            buy_State=buyButtonText.b;\n        }\n        else if(buy_State == buyButtonText.b){\n            buy_State=buyButtonText.a;\n        }\n    }\n\n    return (\n        <Grid container spacing={4}>\n            {cards.map((card) => (\n                <Grid item xs={5} sm={6} md={4} key={card._id}>\n                    <Card\n                        sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n                    >\n                        <CardMedia\n                            component=\"img\"\n                            sx={{\n                                // 16:9\n                                pt: '0%',\n                                minHeight:170,\n                                maxHeight:170\n                            }}\n                            src={card.files}\n                            alt=\"random\"\n                        />\n                        <CardActions>\n                            <Box sx={{ flexGrow: 1 }} />\n                           \n                                <Notify_Dialog\n                                warningHead={\"구매 확인\"} \n                                warningButton={`구매`}\n                                warning={\"정말 구매하시겠습니까?\"}  \n                                value={[card, user]}\n                                ></Notify_Dialog>\n                           \n                            <Button size=\"small\" onClick={() => {\n                                navigate(\"/post-HouseInfoPage\", { state: [card, user] });\n                            }}>보기</Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n            ))}\n        </Grid>)\n}\n\nexport default Mainpage_Card;","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\BuyLogText.jsx",["115"],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\Make_Chatting.jsx",["116","117"],"//#region react\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport io from \"socket.io-client\";\nimport LogText from \"./LogText\"\n//#endregion \n\n//#region mui\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport SendIcon from '@mui/icons-material/Send';\n//#endregion \n\n//#region 전역 변수\nlet socket;\n//#endregion\n\nfunction MakeChatting(props) {\n\n    const ENDPOINT = \"http://localhost:8080\";\n\n    const { sellername, buyername } = props;\n\n    //#region useState\n    const [modalIsOpen, setIsOpen] = useState(false);\n    const [roommax] = useState([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    const [sendmsg, setSendMsg] = useState(\"\");\n    const [chatlog, setChatlog] = useState([{}]);\n    const [RoomNumber, setRoomNumber] = useState();\n    //#endregion\n\n    //#region 함수가 실행될때 modal의 상태를 true로 바꿔준다.\n    function openModal() {\n        if (sellername === buyername) {\n            alert(\"본인의 매물을 구매할 수 없습니다.\");\n        }\n        else {\n            setIsOpen(true);\n            MakeRoom();\n        }\n    }\n    //#endregion\n\n    //#region 함수가 실행될때 modal의 상태를 false로 바꿔준다.\n    function closeModal() {\n        setIsOpen(false);\n    }\n    //#endregion\n\n    //#region useEffect\n    useEffect(() => {\n        socket = io(ENDPOINT);\n    }, []);\n\n    useEffect(() => {\n        socket.on(\"Msg_return\", ({ buyername, sendmsg }) => {\n            setChatlog([...chatlog, { name: buyername, msg: sendmsg }]);\n        })\n        if(chatlog.length !== 0 && chatlog.length !== 1) {\n            socket.emit(\"Save_Msg\",({chatlog, RoomNumber}));\n        }\n    }, [chatlog])\n    //#endregion\n\n    //#region 지역 변수\n    const roomn = [];\n    let makeroom = [];\n    let roomnumber = 0;\n    //#endregion\n\n    //#region 채팅방 생성\n    function MakeRoom() {\n\n        socket.emit(\"Room_Search\");\n\n        socket.on(\"Room_Search_Result\", (result) => {\n            for (let i = 0; i < result.length; i++) {\n                roomn.push(result[i].RoomN);\n            }\n\n            console.log(`res: ${result}`);\n\n            makeroom = roommax.filter(x => !roomn.includes(x));\n\n            if (makeroom.length === 10) {  //방이 없을때\n                roomnumber = makeroom[0];\n                setRoomNumber(makeroom[0]);\n                console.log(RoomNumber);\n                socket.emit(\"Room_Make\", { sellername, buyername, roomnumber });\n                socket.on(\"Room_Make_Result\", () => {\n                    socket.emit(\"Chatting_Join\", { roomnumber });\n                });\n            }\n            else {  //방이 있을때                \n                for (let i = 0; i < result.length; i++) {\n                    if (result[i].Sellername === sellername && result[i].Buyername === buyername) {\n                        roomnumber = result[i].RoomN;\n                        console.log(result[i].Msg);          \n                        console.log(roomnumber);\n                        setRoomNumber(roomnumber);\n                        socket.emit(\"Chatting_Join\", { roomnumber });\n                        setChatlog(result[i].Msg);\n                        socket.emit(\"Load_Msg_Makechat\", { roomnumber });\n                        socket.on('Return_Load_Msg_Makechat', ({ result }) => {\n                            setChatlog(result);\n                        })\n                        break;\n                    }\n                    else if (i === result.length - 1) {\n                        console.log(\"방이없다\");\n                        roomnumber = makeroom[0];\n                        setRoomNumber(makeroom[0]);\n                        socket.emit(\"Room_Make\", { sellername, buyername, roomnumber });\n                        socket.on(\"Room_Make_Result\", () => {\n                            socket.emit(\"Chatting_Join\", { roomnumber });\n                        })\n                    }\n                }\n            }\n        });\n    }\n    //#endregion\n\n    //#region 메세지 전달 함수\n    function SendMessage() {\n        socket.emit(\"Message_Send\", { buyername, sendmsg, RoomNumber });\n    }\n    //#endregion\n\n    //#region 렌더링\n    return (\n        <div>\n            <Button onClick={() => {\n                openModal()\n            }}>CHATTING</Button>\n            <Modal isOpen={modalIsOpen} ariaHideApp={false}>\n                <LogText log={chatlog} ></LogText>\n                <TextField\n                    margin='normal'\n                    required\n                    fullWidth\n                    id=\"Message\"\n                    label=\"Message\"\n                    name=\"Message\"\n                    autoComplete=\"Message\"\n                    autoFocus\n                    onChange={(e) => setSendMsg(e.target.value)}\n                />\n                <ButtonGroup disableElevation variant=\"contained\">\n                    <Button variant=\"contained\" onClick={() => { closeModal() }}>CLOSE</Button>\n                    <Button variant=\"contained\" endIcon={<SendIcon />} onClick={() => { SendMessage() }} >SEND</Button>\n                </ButtonGroup>\n            </Modal>\n        </div>\n    );\n    //#endregion\n}\n\nexport default MakeChatting;","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\Mypage_BuyCard.jsx",[],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\TransactionText.jsx",[],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\Mypage_SellCard.jsx",[],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\RoomList.jsx",[],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\LogText.jsx",[],"C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\Notify_Dialog.jsx",["118","119","120","121","122","123","124","125","126"],"//#region react\nimport React, { useState, useEffect } from 'react';\n//#endregion\n\n//#region mui\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n//#endregion\n\n//#region 라이브러리\nimport BuyHouse from \"../../contracts/BuyHouse.json\"\nimport NFT from \"../../contracts/NFT.json\";\nimport Web3 from 'web3';\n//#endregion\n\n//#region 전역변수\nlet web3;\nlet instance;\nlet NFT_instance;\nlet buyhouse = BuyHouse;\n//#endregion\n\nfunction Notify_Dialog(props) {\n\n  const { warningHead, warning, warningButton, value } = props\n\n  //#region useState\n  const [open, setOpen] = React.useState(false);\n\n  const [sellername] = useState(value[0].name);\n  const [sellerAddress] = useState(value[0].MetaMaskAcc);\n  const [housePrice] = useState(value[0].price);\n  const [houseAddress] = useState(value[0].address);\n  const [sellerImg] = useState(value[0].files);\n  const [locations] = useState(value[0].location);\n  const [buyername] = useState(value[1][0].name);\n\n  const [NFTHash] = useState(value[0].NFTHash);\n\n  const [accounts, setAccounts] = useState(\"\");\n  //#endregion\n\n  useEffect(() => {\n    async function load() {\n      web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');\n      setAccounts(await web3.eth.getAccounts());\n      \n\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = buyhouse.networks[networkId];\n      const NFTNetwork = NFT.networks[networkId];\n\n      instance = new web3.eth.Contract(buyhouse.abi, deployedNetwork.address);\n\n      NFT_instance = new web3.eth.Contract(NFT.abi, NFTNetwork.address);\n      console.log(NFT_instance);\n    }\n\n    load();\n  }, []);\n\n  //#region 구매(이벤트)\n  async function BuyHouse() {\n    try{\n      console.log(accounts);\n      // await instance.methods.buyRealEstate(sellerAddress, locations, sellername, sellerImg, buyername, houseAddress, housePrice).send({\n      //   from: accounts[0],\n      //   value: web3.utils.toWei(housePrice, \"ether\"),    //wei\n      //   gas: 5000000,\n      // })\n      await NFT_instance.methods.safeTransferFrom(accounts[0],'0x2DcCa9B61E50D79A90a813fcD6a42c3A3Ac52e6f',1).send({\n        from: accounts[0],\n        gas: 5000000\n      })\n      alert(\"구매완료\");\n      window.location.replace(\"/post-MainPage\");\n    }\n    catch(e){\n      alert(e.message);\n      window.location.replace(\"/post-MainPage\");\n    }\n  }\n  //#endregion\n\n  //#region 구매 모달 open & close\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);    \n  };\n  //#endregion\n\n  //#region 렌더링\n  return (\n    <div>\n      <Button size=\"small\" onClick={handleClickOpen}>{warningButton}</Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {warningHead}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {warning}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>아니요</Button>\n          <Button onClick={() => {\n            BuyHouse()\n            handleClose()\n          }} autoFocus>\n            네\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n  //#endregion\n}\n\nexport default Notify_Dialog;","C:\\Users\\afaf5\\OneDrive\\바탕 화면\\최종본\\react-BlockChain\\Front\\client\\src\\component\\ui\\Chatting.jsx",["127"],"//#region react\nimport React, { useState, useEffect } from 'react';\n//#endregion\n\n//#region mui\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport SendIcon from '@mui/icons-material/Send';\nimport io from \"socket.io-client\";\nimport LogText from \"./LogText\"\nimport Box from '@mui/material/Box';\n//#endregion\n\n//#region CSS Style\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    bgcolor: 'background.paper',\n    height: '80%',\n    width: '40%',\n    border: '2px solid #000',\n    pt: 2,\n    px: 4,\n    pb: 3,\n};\n//#endregion\n\n//#region 전역 변수\nlet socket;\n//#endregion\n\n\nfunction Chatting(props) {\n\n    const ENDPOINT = \"http://localhost:8080\";\n\n    const { value , buyer_name } = props;\n\n    //#region useState\n    const [modalIsOpen, setIsOpen] = useState(false);\n    const [chat_log, set_Chatlog] = useState([{}]);\n    const [send_msg, set_SendMsg] = useState(\"\");\n    const [Room_Number] = useState(value); \n    //#endregion\n   \n    let room_number = 0;\n    \n    //#region 함수가 실행될때 modal의 상태를 true로 바꿔준다.\n    function openModal() {\n        room_number=Room_Number;\n        socket.emit(\"Chatting_Join\",{room_number});\n        socket.on('Join_return',({room_number})=>{\n            console.log(\"성공\");\n        })\n        socket.emit(\"Load_Msg_Chat\",{Room_Number});\n        socket.on('Return_Load_Msg_Chat',({result})=> {\n            set_Chatlog(result);\n        })\n        setIsOpen(true);\n        \n    }\n    //#endregion\n\n    //#region 함수가 실행될때 modal의 상태를 false로 바꿔준다. \n    function closeModal() {\n        setIsOpen(false);\n    }\n    //#endregion\n\n    //#region useEffect\n    useEffect(() => {\n        socket = io(ENDPOINT);        \n    }, [ENDPOINT]);\n\n    useEffect(()=>{\n        \n        socket.on(\"Msg_return\", ({ buyer_name, send_msg }) => {\n            console.log(\"신호\");\n            set_Chatlog([...chat_log, { name: buyer_name, msg: send_msg }]);\n        })\n        if(chat_log.length !== 0 && chat_log.length !== 1) {\n            socket.emit(\"Save_Msg\",({chat_log, Room_Number}));\n        }\n    },[chat_log]);\n    //#endregion\n\n    //#region 메세지 전달 함수\n    function SendMessage() {\n        \n        socket.emit(\"Message_Send\", { buyer_name, send_msg, Room_Number });        \n    }\n    //#endregion\n\n    //#region 렌더링\n    return (\n        <React.Fragment>\n            <Button onClick={openModal}>Chatting</Button>\n            <Modal\n                hideBackdrop\n                open={modalIsOpen}\n                onClose={closeModal}\n                aria-labelledby=\"child-modal-title\"\n                aria-describedby=\"child-modal-description\"\n            >\n                <Box sx={{ ...style }}>\n                    <LogText log={chat_log} ></LogText>\n                    <TextField\n                        margin='normal'\n                        required\n                        fullWidth\n                        id=\"Message\"\n                        label=\"Message\"\n                        name=\"Message\"\n                        autoComplete=\"Message\"\n                        autoFocus\n                        onChange={(e) => set_SendMsg(e.target.value)}\n                    />\n                    <ButtonGroup disableElevation variant=\"contained\">\n                        <Button variant=\"contained\" onClick={() => { closeModal() }}>CLOSE</Button>\n                        <Button variant=\"contained\" endIcon={<SendIcon />} onClick={() => { SendMessage() }} >SEND</Button>\n                    </ButtonGroup>\n                </Box>\n            </Modal>\n        </React.Fragment>\n    );\n    //#endregion\n}\n\nexport default Chatting;",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":161,"column":21,"nodeType":"134","messageId":"135","endLine":161,"endColumn":54},{"ruleId":"132","severity":1,"message":"136","line":217,"column":21,"nodeType":"134","messageId":"135","endLine":217,"endColumn":89},{"ruleId":"137","severity":1,"message":"138","line":77,"column":7,"nodeType":"139","endLine":77,"endColumn":27,"suggestions":"140"},{"ruleId":"132","severity":1,"message":"141","line":201,"column":29,"nodeType":"134","messageId":"135","endLine":201,"endColumn":72},{"ruleId":"132","severity":1,"message":"142","line":205,"column":29,"nodeType":"134","messageId":"135","endLine":205,"endColumn":91},{"ruleId":"137","severity":1,"message":"143","line":59,"column":22,"nodeType":"144","endLine":59,"endColumn":49},{"ruleId":"132","severity":1,"message":"145","line":172,"column":29,"nodeType":"134","messageId":"135","endLine":172,"endColumn":82},{"ruleId":"132","severity":1,"message":"146","line":183,"column":29,"nodeType":"134","messageId":"135","endLine":183,"endColumn":83},{"ruleId":"147","severity":1,"message":"148","line":12,"column":8,"nodeType":"149","messageId":"150","endLine":12,"endColumn":24},{"ruleId":"147","severity":1,"message":"151","line":13,"column":8,"nodeType":"149","messageId":"150","endLine":13,"endColumn":16},{"ruleId":"147","severity":1,"message":"152","line":14,"column":8,"nodeType":"149","messageId":"150","endLine":14,"endColumn":12},{"ruleId":"147","severity":1,"message":"153","line":23,"column":26,"nodeType":"149","messageId":"150","endLine":23,"endColumn":31},{"ruleId":"147","severity":1,"message":"154","line":30,"column":11,"nodeType":"149","messageId":"150","endLine":30,"endColumn":25},{"ruleId":"147","severity":1,"message":"155","line":37,"column":14,"nodeType":"149","messageId":"150","endLine":37,"endColumn":22},{"ruleId":"156","severity":1,"message":"157","line":38,"column":23,"nodeType":"158","messageId":"159","endLine":38,"endColumn":25},{"ruleId":"156","severity":1,"message":"157","line":41,"column":27,"nodeType":"158","messageId":"159","endLine":41,"endColumn":29},{"ruleId":"132","severity":1,"message":"160","line":67,"column":33,"nodeType":"134","messageId":"135","endLine":72,"endColumn":34},{"ruleId":"147","severity":1,"message":"161","line":35,"column":12,"nodeType":"149","messageId":"150","endLine":35,"endColumn":26},{"ruleId":"137","severity":1,"message":"162","line":63,"column":8,"nodeType":"139","endLine":63,"endColumn":17,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":115,"column":55,"nodeType":"166","messageId":"167","endLine":117,"endColumn":26},{"ruleId":"147","severity":1,"message":"168","line":22,"column":5,"nodeType":"149","messageId":"150","endLine":22,"endColumn":13},{"ruleId":"147","severity":1,"message":"169","line":34,"column":10,"nodeType":"149","messageId":"150","endLine":34,"endColumn":20},{"ruleId":"147","severity":1,"message":"170","line":35,"column":10,"nodeType":"149","messageId":"150","endLine":35,"endColumn":23},{"ruleId":"147","severity":1,"message":"171","line":36,"column":10,"nodeType":"149","messageId":"150","endLine":36,"endColumn":20},{"ruleId":"147","severity":1,"message":"172","line":37,"column":10,"nodeType":"149","messageId":"150","endLine":37,"endColumn":22},{"ruleId":"147","severity":1,"message":"173","line":38,"column":10,"nodeType":"149","messageId":"150","endLine":38,"endColumn":19},{"ruleId":"147","severity":1,"message":"174","line":39,"column":10,"nodeType":"149","messageId":"150","endLine":39,"endColumn":19},{"ruleId":"147","severity":1,"message":"175","line":40,"column":10,"nodeType":"149","messageId":"150","endLine":40,"endColumn":19},{"ruleId":"147","severity":1,"message":"176","line":42,"column":10,"nodeType":"149","messageId":"150","endLine":42,"endColumn":17},{"ruleId":"137","severity":1,"message":"177","line":88,"column":7,"nodeType":"139","endLine":88,"endColumn":17,"suggestions":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"react/jsx-pascal-case","Imported JSX component RoomList_Dialog must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Mainpage_Card must be in PascalCase or SCREAMING_SNAKE_CASE","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'houseAddress'. Either include it or remove the dependency array.","ArrayExpression",["181"],"Imported JSX component Transaction_log must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Make_Chatting must be in PascalCase or SCREAMING_SNAKE_CASE","Assignments to the 'number' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Imported JSX component Mypage_SellCard must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Mypage_BuyCard must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Link' is defined but never used.","'value' is assigned a value but never used.","'buy_State_enum' is assigned a value but never used.","'buystate' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Imported JSX component Notify_Dialog must be in PascalCase or SCREAMING_SNAKE_CASE","'ALL_BuyLogText' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'RoomNumber'. Either include it or remove the dependency array.",["182"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'socket', 'roomnumber'.","ArrowFunctionExpression","unsafeRefs","'instance' is assigned a value but never used.","'sellername' is assigned a value but never used.","'sellerAddress' is assigned a value but never used.","'housePrice' is assigned a value but never used.","'houseAddress' is assigned a value but never used.","'sellerImg' is assigned a value but never used.","'locations' is assigned a value but never used.","'buyername' is assigned a value but never used.","'NFTHash' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Room_Number'. Either include it or remove the dependency array.",["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [houseAddress, transaction_record]",{"range":"190","text":"191"},"Update the dependencies array to be: [RoomNumber, chatlog]",{"range":"192","text":"193"},"Update the dependencies array to be: [Room_Number, chat_log]",{"range":"194","text":"195"},[2629,2649],"[houseAddress, transaction_record]",[1669,1678],"[RoomNumber, chatlog]",[2214,2224],"[Room_Number, chat_log]"]