[{"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\App.js":"2","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\LoginPage.jsx":"4","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\MainPage.jsx":"5","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\NewMemberPage.jsx":"6","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\registration\\HouseInfoInsert.jsx":"7","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\HouseInfoPage.jsx":"8","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\UserMyPage.jsx":"9","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\registration\\HouseInfoUpdate.jsx":"10","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\RoomList_Dialog.jsx":"11","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Mainpage_Card.jsx":"12","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Notify_Dialog.jsx":"13","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Make_Chatting.jsx":"14","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\RoomList.jsx":"15","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Chatting.jsx":"16","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\LogText.jsx":"17","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\UserUpdatePage.jsx":"18","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\TransactionText.jsx":"19","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\BuyLogText.jsx":"20","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Mypage_SellCard.jsx":"21","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Mypage_BuyCard.jsx":"22"},{"size":552,"mtime":1656580636000,"results":"23","hashOfConfig":"24"},{"size":1443,"mtime":1657086708108,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1656580636000,"results":"26","hashOfConfig":"24"},{"size":4856,"mtime":1656937122819,"results":"27","hashOfConfig":"24"},{"size":9535,"mtime":1657172905787,"results":"28","hashOfConfig":"24"},{"size":8704,"mtime":1656580636000,"results":"29","hashOfConfig":"24"},{"size":6377,"mtime":1656936757002,"results":"30","hashOfConfig":"24"},{"size":9815,"mtime":1657170046762,"results":"31","hashOfConfig":"24"},{"size":8866,"mtime":1657180535534,"results":"32","hashOfConfig":"24"},{"size":7925,"mtime":1657088810546,"results":"33","hashOfConfig":"24"},{"size":2668,"mtime":1657082819517,"results":"34","hashOfConfig":"24"},{"size":2895,"mtime":1657169696670,"results":"35","hashOfConfig":"24"},{"size":2726,"mtime":1657175127994,"results":"36","hashOfConfig":"24"},{"size":5440,"mtime":1656990808700,"results":"37","hashOfConfig":"24"},{"size":3780,"mtime":1657083323663,"results":"38","hashOfConfig":"24"},{"size":3842,"mtime":1656990798883,"results":"39","hashOfConfig":"24"},{"size":288,"mtime":1656580636000,"results":"40","hashOfConfig":"24"},{"size":6506,"mtime":1657089140579,"results":"41","hashOfConfig":"24"},{"size":401,"mtime":1657170045480,"results":"42","hashOfConfig":"24"},{"size":1038,"mtime":1657173071217,"results":"43","hashOfConfig":"24"},{"size":3352,"mtime":1657175250161,"results":"44","hashOfConfig":"24"},{"size":3113,"mtime":1657175418308,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"nwei1x",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\index.js",[],["95","96"],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\App.js",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\LoginPage.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\MainPage.jsx",["97"],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\NewMemberPage.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\registration\\HouseInfoInsert.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\HouseInfoPage.jsx",["98","99","100"],"/* eslint-disable react/jsx-pascal-case */\r\n//#region react\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router\";\r\nimport Web3 from 'web3';\r\n//#endregion\r\n\r\n//#region mui\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport Container from '@mui/material/Container';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardMedia from '@mui/material/CardMedia';\r\n//#endregion\r\n\r\n//#region component\r\nimport Make_Chatting from \"../ui/Make_Chatting\";\r\nimport Transaction_log from \"../ui/TransactionText\"\r\nimport BuyHouseContract from \"../../contracts/BuyHouse.json\"\r\n//#endregion\r\n\r\nlet web3;\r\nlet instance;\r\nlet arr= [];\r\n\r\n\r\n\r\nfunction HouseInfoPage() {\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [sellername] = useState(location.state[0].name);\r\n    const [sellerAddress] = useState(location.state[0].MetaMaskAcc)\r\n    const [housePrice] = useState(location.state[0].price)\r\n    const [houseAddress] = useState(location.state[0].address)\r\n    const [locations] = useState(location.state[0].location)\r\n    const [buyername] = useState(location.state[1][0].name);\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (\r\n            event &&\r\n            event.type === 'keydown' &&\r\n            (event.key === 'Tab' || event.key === 'Shift')\r\n        ) {\r\n            return;\r\n        }\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const [state, setState] = React.useState({\r\n        left: false\r\n    });\r\n    const [accounts, setAccounts] = useState()\r\n    const [transaction_record, setTransaction_record] = useState([])\r\n    const [transaction_textlog, setTransaction_textlog] = useState([])\r\n   \r\n\r\n \r\n    useEffect(()=>{\r\n     \r\n        for(let i=0; i<transaction_record.length; i++)\r\n        {\r\n            if(transaction_record[i].houseAddress===houseAddress)\r\n            {\r\n                arr.push({sellerName : transaction_record[i][0], buyerName: transaction_record[i][1], housePrice : transaction_record[i][3]})\r\n                setTransaction_textlog(arr);\r\n            }\r\n        }\r\n        \r\n\r\n    },[transaction_record])\r\n    \r\n\r\n    useEffect(() => {\r\n        async function load() {            \r\n            console.log(location.state);\r\n            \r\n            web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');\r\n            const networkId = await web3.eth.net.getId();\r\n            const deployedNetwork = await BuyHouseContract.networks[networkId];\r\n            const accounts = await web3.eth.getAccounts();\r\n            setAccounts(accounts);\r\n            console.log(accounts);\r\n            \r\n            instance = new web3.eth.Contract(BuyHouseContract.abi, deployedNetwork.address);\r\n            console.log(instance);\r\n\r\n            setTransaction_record(await instance.methods.readRealEstate(locations).call());\r\n        }\r\n        load();\r\n       \r\n    }, [location]);\r\n\r\n   \r\n\r\n    async function BuyHouse() {\r\n        await instance.methods.buyRealEstate(sellerAddress, locations, sellername, buyername, houseAddress, housePrice).send({\r\n            from: accounts[0],\r\n            value: web3.utils.toWei(housePrice, \"ether\"),    //wei\r\n            gas: 150000,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={toggleDrawer(\"left\", true)}\r\n                        edge=\"start\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <SwipeableDrawer\r\n                        anchor=\"left\"\r\n                        open={state[\"left\"]}\r\n                        onClose={toggleDrawer(\"left\", false)}\r\n                        onOpen={toggleDrawer(\"left\", true)}\r\n                    >\r\n                        <Box\r\n                            sx={{ width: \"left\" === 'top' || \"left\" === 'bottom' ? 'auto' : 250 }}\r\n                            role=\"presentation\"\r\n                            onClick={toggleDrawer(\"left\", false)}\r\n                            onKeyDown={toggleDrawer(\"left\", false)}\r\n                        >\r\n                            <List>\r\n                                <ListItem key=\"마이페이지\" disablePadding sx={{ display: 'block' }}>\r\n                                    <Divider />\r\n                                    <ListItemButton>\r\n                                        <ListItemText onClick={() => {\r\n                                            navigate(\"/\")\r\n                                        }} primary=\"LogOut\" />\r\n                                    </ListItemButton>\r\n                                    <ListItemButton>\r\n                                        <ListItemText onClick={() => {\r\n                                            navigate(\"/post-MainPage\", { state: location.state[1] });\r\n                                        }} primary=\"MainPage\" />\r\n                                    </ListItemButton>\r\n                                </ListItem>\r\n                            </List>\r\n                        </Box>\r\n                    </SwipeableDrawer>\r\n\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{ display: { xs: 'none', sm: 'block' } }}\r\n                    >\r\n                        Buy\r\n                    </Typography>&nbsp;\r\n                    <ShoppingCartIcon />\r\n                    <Box sx={{ flexGrow: 1 }} />\r\n                    접속중인 사람 : {location.state[1][0].name}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box\r\n                sx={{\r\n                    bgcolor: 'background.paper',\r\n                    pt: 8,\r\n                    pb: 6,\r\n                }}\r\n            >\r\n                <Container>\r\n                    <Card\r\n                        sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n                    >\r\n                        <CardContent sx={{ flexGrow: 1 }}>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                판매자 정보\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"h6\">\r\n                                &nbsp;&nbsp;이름 : {location.state[0].name}<br />\r\n                                &nbsp;&nbsp;전화번호 : {location.state[0].number}\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                가격\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"h6\">\r\n                                &nbsp;&nbsp;{location.state[0].price} (ETH)\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                사진\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <Container><Container><Container><Container><Container><Container><Container><Container><Container>\r\n                            <Card>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    sx={{\r\n                                        pt: '0%',\r\n                                    }}\r\n                                    src={location.state[0].files}\r\n                                    alt=\"random\"\r\n                                />\r\n                            </Card>\r\n                        </Container></Container></Container></Container></Container></Container></Container></Container></Container>\r\n                        <CardContent sx={{ flexGrow: 1 }}>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                주소\r\n                            </Typography>\r\n                            <Typography>\r\n                                &nbsp;&nbsp;{location.state[0].address}\r\n                            </Typography>\r\n                            <br/>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                거래 기록\r\n                            </Typography>\r\n                            <Transaction_log log={transaction_textlog}></Transaction_log>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Box sx={{ flexGrow: 1 }} />\r\n                            <Make_Chatting sellername={sellername} buyername={buyername} ></Make_Chatting>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Container>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default HouseInfoPage;","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\UserMyPage.jsx",["101","102","103"],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\registration\\HouseInfoUpdate.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\RoomList_Dialog.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Mainpage_Card.jsx",["104","105"],"//#region react\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//#endregion\r\n\r\n//#region mui\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\n//#endregion\r\n\r\nimport Notify_Dialog from \"./Notify_Dialog\";\r\n\r\nfunction Mainpage_Card(props) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { cards, user } = props;\r\n\r\n    var buy_State = 'buy_Possible'\r\n\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {cards.map((card) => (\r\n                <Grid item xs={5} sm={6} md={4} key={card._id}>\r\n                    <Card\r\n                        sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n                    >\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            sx={{\r\n                                // 16:9\r\n                                pt: '0%',\r\n                                minHeight:170,\r\n                                maxHeight:170\r\n                            }}\r\n                            src={card.files}\r\n                            alt=\"random\"\r\n                        />\r\n                        <CardActions>\r\n                            <Box sx={{ flexGrow: 1 }} />\r\n                            <div>\r\n                                {\r\n                                    {\r\n                                        buy_Possible : <Notify_Dialog\r\n                                            warningHead={\"구매 확인\"} \r\n                                            warningButton={\"구매\"} \r\n                                            warning={\"정말 구매하시겠습니까?\"} \r\n                                            value={[card, user]}\r\n                                           \r\n                                            ></Notify_Dialog>,\r\n                                        buy_Impossible : <Notify_Dialog\r\n                                            warningButton={\"판매완료\"} \r\n                                            warning={\"판매 완료된 매물입니다.\"} \r\n                                            value={[card, user]}\r\n                                            ></Notify_Dialog>\r\n                                    }[buy_State]\r\n                                }\r\n                            </div>\r\n                            <Button size=\"small\" onClick={() => {\r\n                                navigate(\"/post-HouseInfoPage\", { state: [card, user] });\r\n                            }}>보기</Button>\r\n                        </CardActions>\r\n\r\n                    </Card>\r\n                </Grid>\r\n            ))}\r\n        </Grid>)\r\n}\r\n\r\nexport default Mainpage_Card;","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Notify_Dialog.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Make_Chatting.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\RoomList.jsx",["106"],"//#region react\r\nimport React, { useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n//#endregion\r\n\r\n//#region mui\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Divider from '@mui/material/Divider';\r\nimport List from '@mui/material/List';\r\nimport Chatting from \"./Chatting\"\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport { Button } from \"@mui/material\";\r\n//#endregion\r\n\r\nlet socket;\r\n\r\nfunction RoomList(props) {\r\n\r\n    const ENDPOINT = \"http://localhost:8080\";\r\n\r\n    const { value, username } = props;\r\n\r\n    useEffect(() => {\r\n        socket = io(ENDPOINT);\r\n    }, []);\r\n\r\n    async function RoomSerach(value) {\r\n        socket.emit(\"Search_Room\", { value });\r\n        await socket.on('Search_Room_Result', (result) => {\r\n            if (result.result[0].Buyername === username) {\r\n                socket.emit(\"GetOutRoom_Buyername\", { value, username });\r\n                socket.on('GetOutRoom_Buyername_Result', () => {\r\n                    socket.emit(\"Search_Room\", { value });\r\n                    socket.on('Search_Room_Result', (result) => {\r\n                        if (result.result[0].Sellername === null) {\r\n                            socket.emit(\"GetOutRoom\", { value });\r\n                            socket.on('GetOutRoom_Result', (result) => {\r\n                                alert(result)\r\n                                window.location.replace(\"/post-MainPage\")\r\n                            })\r\n                        }\r\n                        else{\r\n                            alert(\"삭제완료\")\r\n                            window.location.replace(\"/post-MainPage\")\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            else if (result.result[0].Sellername === username) {\r\n                socket.emit(\"GetOutRoom_Sellername\", { value, username });\r\n                socket.on('GetOutRoom_Sellername_Result', () => {\r\n                    socket.emit(\"Search_Room\", { value });\r\n                    socket.on('Search_Room_Result', (result) => {\r\n                        if (result.result[0].Buyername === null) {\r\n                            socket.emit(\"GetOutRoom\", { value });\r\n                            socket.on('GetOutRoom_Result', (result) => {\r\n                                alert(result)\r\n                                window.location.replace(\"/post-MainPage\")\r\n                            })\r\n                        }\r\n                        else{\r\n                            alert(\"삭제완료\")\r\n                            window.location.replace(\"/post-MainPage\")\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    function RoomOut(value) {\r\n        socket.emit(\"GetOutRoom\", { value });\r\n        socket.on('GetOutRoom_Result', (result) => {\r\n            alert(result)\r\n            window.location.replace(\"/post-MainPage\")\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            {value.map((value) => (\r\n                <List key={value.toString()}>\r\n                    <ListItem disablePadding>\r\n                        <ListItemButton>\r\n                            <ListItemText primary={value} secondary=\"메세지내용\" />\r\n                        </ListItemButton>\r\n                        <Chatting value={value} buyername={username}></Chatting>\r\n                        <Button\r\n                            onClick={() => {\r\n                                RoomSerach(value)\r\n                            }}\r\n                        >OUT</Button>\r\n                    </ListItem>\r\n                    <Divider />\r\n                </List>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoomList;","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Chatting.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\LogText.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\UserUpdatePage.jsx",["107","108","109"],"//#region react\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from \"react-router\";\r\nimport io from \"socket.io-client\";\r\n//#endregion\r\n\r\n//#region mui\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//#endregion\r\n\r\nlet socket;\r\n\r\nconst theme = createTheme();\r\n\r\nconst NewMember = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation()\r\n\r\n    const ENDPOINT = \"http://localhost:8080\";\r\n\r\n    const [name, setName] = useState(location.state[0][0].name);\r\n    const [id] = useState(location.state[0][0].id);\r\n    const [pw, setPw] = useState(location.state[0][0].pw);\r\n    const [phoneNum, setPhoneNum] = useState(location.state[0][0].number);\r\n    const [MetaMaskAcc, setMetaMaskAcc] = useState(location.state[0][0].MetaMaskAcc);\r\n\r\n\r\n    useEffect(() => {\r\n        socket = io(ENDPOINT);\r\n    }, []);\r\n\r\n    function Sign_up() {\r\n        if (name === \"\" || id === \"\" || pw === \"\" || phoneNum === \"\" || MetaMaskAcc === \"\") {\r\n            alert(\"입력하지 않은 정보가 있습니다\");\r\n        }\r\n        else {\r\n            console.log(phoneNum)\r\n            socket.emit(\"UserUpdate\", { name, id, pw, phoneNum, MetaMaskAcc });\r\n            socket.on(\"UserUpdate_Result\", (CheckMsg) => {\r\n                alert(CheckMsg);\r\n            })\r\n            navigate('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        회원 정보 수정\r\n                    </Typography>\r\n                    <Box component=\"form\" noValidate sx={{ mt: 3 }}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    autoComplete=\"given-name\"\r\n                                    name=\"name\"\r\n                                    required\r\n                                    fullWidth\r\n                                    label=\"name\"                                    \r\n                                    value={name}\r\n                                    autoFocus\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    name=\"id\"\r\n                                    label=\"id\"\r\n                                    defaultValue={id}\r\n                                    type=\"id\"\r\n                                    id=\"id\"\r\n                                    InputProps={{\r\n                                        readOnly: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    value={pw}\r\n                                    id=\"password\"\r\n                                    autoComplete=\"new-password\"\r\n                                    onChange={(e) => setPw(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"number\"\r\n                                    label=\"전화번호\"\r\n                                    value={phoneNum}\r\n                                    name=\"number\"\r\n                                    autoComplete=\"number\"\r\n                                    onChange={(e) => setPhoneNum(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"MetaMaskAcc\"\r\n                                    label=\"MetaMaskAcc\"\r\n                                    value={MetaMaskAcc}\r\n                                    name=\"MetaMaskAcc\"\r\n                                    autoComplete=\"MetaMaskAcc\"\r\n                                    onChange={(e) => setMetaMaskAcc(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2 }}\r\n                            onClick={() => {\r\n                                Sign_up();\r\n                            }}\r\n                        >\r\n                            정보 수정\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default NewMember;","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\TransactionText.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\BuyLogText.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Mypage_SellCard.jsx",["110"],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Mypage_BuyCard.jsx",["111","112","113"],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":103,"column":7,"nodeType":"120","endLine":103,"endColumn":9,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":85,"column":7,"nodeType":"120","endLine":85,"endColumn":27,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"124","line":106,"column":8,"nodeType":"120","endLine":106,"endColumn":18,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":110,"column":20,"nodeType":"128","messageId":"129","endLine":110,"endColumn":28},{"ruleId":"126","severity":1,"message":"130","line":48,"column":12,"nodeType":"128","messageId":"129","endLine":48,"endColumn":20},{"ruleId":"131","severity":1,"message":"132","line":84,"column":39,"nodeType":"133","messageId":"134","endLine":84,"endColumn":41},{"ruleId":"135","severity":1,"message":"136","line":87,"column":45,"nodeType":"137","messageId":"138","endLine":93,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":48,"column":56,"nodeType":"141","messageId":"142","endLine":54,"endColumn":46},{"ruleId":"139","severity":1,"message":"140","line":55,"column":58,"nodeType":"141","messageId":"142","endLine":59,"endColumn":46},{"ruleId":"126","severity":1,"message":"143","line":72,"column":14,"nodeType":"128","messageId":"129","endLine":72,"endColumn":21},{"ruleId":"126","severity":1,"message":"144","line":12,"column":8,"nodeType":"128","messageId":"129","endLine":12,"endColumn":24},{"ruleId":"126","severity":1,"message":"145","line":13,"column":8,"nodeType":"128","messageId":"129","endLine":13,"endColumn":16},{"ruleId":"126","severity":1,"message":"146","line":14,"column":8,"nodeType":"128","messageId":"129","endLine":14,"endColumn":12},{"ruleId":"126","severity":1,"message":"147","line":23,"column":5,"nodeType":"128","messageId":"129","endLine":23,"endColumn":11},{"ruleId":"126","severity":1,"message":"148","line":11,"column":8,"nodeType":"128","messageId":"129","endLine":11,"endColumn":14},{"ruleId":"126","severity":1,"message":"147","line":22,"column":5,"nodeType":"128","messageId":"129","endLine":22,"endColumn":11},{"ruleId":"126","severity":1,"message":"149","line":28,"column":11,"nodeType":"128","messageId":"129","endLine":28,"endColumn":19},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Arr_BuyLogText' and 'location.state'. Either include them or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect has a missing dependency: 'houseAddress'. Either include it or remove the dependency array.",["153"],"React Hook useEffect has a missing dependency: 'locations'. Either include it or remove the dependency array.",["154"],"no-unused-vars","'BuyHouse' is defined but never used.","Identifier","unusedVar","'accounts' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'count'.","ArrowFunctionExpression","unsafeRefs","react/jsx-pascal-case","Imported JSX component Notify_Dialog must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'RoomOut' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'socket' is assigned a value but never used.","'Button' is defined but never used.","'navigate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [Arr_BuyLogText, location.state]",{"range":"161","text":"162"},"Update the dependencies array to be: [houseAddress, transaction_record]",{"range":"163","text":"164"},"Update the dependencies array to be: [location, locations]",{"range":"165","text":"166"},[3557,3559],"[Arr_BuyLogText, location.state]",[2872,2892],"[houseAddress, transaction_record]",[3659,3669],"[location, locations]"]