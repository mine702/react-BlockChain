[{"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\App.js":"2","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\LoginPage.jsx":"4","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\MainPage.jsx":"5","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\NewMemberPage.jsx":"6","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\registration\\HouseInfoInsert.jsx":"7","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\HouseInfoPage.jsx":"8","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\UserMyPage.jsx":"9","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\registration\\HouseInfoUpdate.jsx":"10","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\RoomList_Dialog.jsx":"11","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Mainpage_Card.jsx":"12","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Notify_Dialog.jsx":"13","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Make_Chatting.jsx":"14","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\RoomList.jsx":"15","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Chatting.jsx":"16","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\LogText.jsx":"17","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\UserUpdatePage.jsx":"18","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\TransactionText.jsx":"19","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\BuyLogText.jsx":"20","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Mypage_SellCard.jsx":"21","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Mypage_BuyCard.jsx":"22"},{"size":552,"mtime":1656580636000,"results":"23","hashOfConfig":"24"},{"size":1443,"mtime":1657086708108,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1656580636000,"results":"26","hashOfConfig":"24"},{"size":4856,"mtime":1656937122819,"results":"27","hashOfConfig":"24"},{"size":9535,"mtime":1657172905787,"results":"28","hashOfConfig":"24"},{"size":8704,"mtime":1656580636000,"results":"29","hashOfConfig":"24"},{"size":6377,"mtime":1656936757002,"results":"30","hashOfConfig":"24"},{"size":9742,"mtime":1657181089959,"results":"31","hashOfConfig":"24"},{"size":8565,"mtime":1657191775685,"results":"32","hashOfConfig":"24"},{"size":7925,"mtime":1657088810546,"results":"33","hashOfConfig":"24"},{"size":2668,"mtime":1657082819517,"results":"34","hashOfConfig":"24"},{"size":2939,"mtime":1657191148369,"results":"35","hashOfConfig":"24"},{"size":2726,"mtime":1657191076104,"results":"36","hashOfConfig":"24"},{"size":5440,"mtime":1656990808700,"results":"37","hashOfConfig":"24"},{"size":3780,"mtime":1657083323663,"results":"38","hashOfConfig":"24"},{"size":3842,"mtime":1656990798883,"results":"39","hashOfConfig":"24"},{"size":288,"mtime":1656580636000,"results":"40","hashOfConfig":"24"},{"size":6506,"mtime":1657089140579,"results":"41","hashOfConfig":"24"},{"size":401,"mtime":1657170045480,"results":"42","hashOfConfig":"24"},{"size":1038,"mtime":1657173071217,"results":"43","hashOfConfig":"24"},{"size":2998,"mtime":1657191814166,"results":"44","hashOfConfig":"24"},{"size":3069,"mtime":1657191152023,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"nwei1x",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\index.js",[],["94","95"],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\App.js",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\LoginPage.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\MainPage.jsx",["96"],"/* eslint-disable react/jsx-pascal-case */\r\n//#region react\r\nimport React, { useState, useEffect } from 'react';\r\nimport io from \"socket.io-client\";\r\n//#endregion\r\n\r\n//#region mui\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Stack from '@mui/material/Stack';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Divider from '@mui/material/Divider';\r\n//#endregion\r\n\r\n//#region component\r\nimport RoomList_Dialog from '../ui/RoomList_Dialog';\r\nimport Mainpage_Card from '../ui/Mainpage_Card';\r\nimport BuyLogText from '../ui/BuyLogText';\r\n//#endregion\r\n\r\nimport Web3 from 'web3';\r\nimport RealEstate from '../../contracts/BuyHouse.json';\r\n\r\nconst theme = createTheme();\r\n\r\nlet socket;\r\nlet web3;\r\nlet instance;\r\n\r\nfunction Mainpage(props) {\r\n\r\n    //const { account } =props;\r\n\r\n    let Arr_BuyLogText = [];\r\n\r\n\r\n    const ENDPOINT = \"http://localhost:8080\";\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [cards, setCardsLow] = useState([]);\r\n    const [area, setArea] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [state, setState] = React.useState({\r\n        left: false\r\n    });\r\n    const [ALL_BuyLogText, setBuyLogText] = useState([]);\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (\r\n            event &&\r\n            event.type === 'keydown' &&\r\n            (event.key === 'Tab' || event.key === 'Shift')\r\n        ) {\r\n            return;\r\n        }\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     socket = io(ENDPOINT);\r\n    //     setUsername(location.state[0].name);\r\n    // }, [location])\r\n\r\n    useEffect(()=>{\r\n        socket = io(ENDPOINT);\r\n        setUsername(location.state[0].name);\r\n        \r\n        async function load() {            \r\n            web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');\r\n            //setAccounts(await web3.eth.getAccounts());\r\n      \r\n            const networkId = await web3.eth.net.getId();\r\n            const deployedNetwork = RealEstate.networks[networkId];\r\n            \r\n            instance =  new web3.eth.Contract(RealEstate.abi, deployedNetwork.address);\r\n            instance.events.BuyLogText({},{fromBlock:0 , toBlock:'latest'}, (err,res)=>{  //처음부터 끝까지 검색\r\n                Arr_BuyLogText.push(`${res.returnValues.buyerName}님이 ${res.returnValues.sellerName}님의 ${res.returnValues.houseAddress}를 ${res.returnValues.housePrice}eth로 매입하셨습니다.`);\r\n                console.log(Arr_BuyLogText);\r\n                setBuyLogText(Arr_BuyLogText);\r\n            })\r\n          }\r\n\r\n          load();\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (area !== \"\") {\r\n            socket.emit(\"Area_Data\", { area });\r\n            socket.on(\"Area_Data_Result\", (Result) => {\r\n                setCardsLow(Result);\r\n                socket.off();\r\n            })\r\n        }\r\n    }, [area])\r\n\r\n   \r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <AppBar position=\"relative\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={toggleDrawer(\"left\", true)}\r\n                        edge=\"start\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <SwipeableDrawer\r\n                        anchor=\"left\"\r\n                        open={state[\"left\"]}\r\n                        onClose={toggleDrawer(\"left\", false)}\r\n                        onOpen={toggleDrawer(\"left\", true)}\r\n                    >\r\n                        <Box\r\n                            sx={{ width: \"left\" === 'top' || \"left\" === 'bottom' ? 'auto' : 250 }}\r\n                            role=\"presentation\"\r\n                            onClick={toggleDrawer(\"left\", false)}\r\n                            onKeyDown={toggleDrawer(\"left\", false)}\r\n                        >\r\n                            <List>\r\n                                <ListItem key=\"마이페이지\" disablePadding sx={{ display: 'block' }}>\r\n                                    <Divider />\r\n                                    <ListItemButton>\r\n                                        <ListItemText onClick={()=>{\r\n                                            navigate(\"/post-UserMyPage\", { state: [location.state] })\r\n                                        }} primary=\"MyPage\" />\r\n                                    </ListItemButton>\r\n                                    <ListItemButton>\r\n                                        <ListItemText onClick={() => {\r\n                                            navigate(\"/\")\r\n                                        }} primary=\"LogOut\" />\r\n                                    </ListItemButton>\r\n                                </ListItem>\r\n                            </List>\r\n                        </Box>\r\n                    </SwipeableDrawer>\r\n                    <RoomList_Dialog name={username}></RoomList_Dialog>\r\n                    <Box sx={{ flexGrow: 1 }} />\r\n                    접속중인 사람 : {username}\r\n                </Toolbar>\r\n\r\n            </AppBar>\r\n            <main>\r\n                {/* Hero unit */}\r\n                <Box\r\n                    sx={{\r\n                        bgcolor: 'background.paper',\r\n                        pt: 8,\r\n                        pb: 6,\r\n                    }}\r\n                >\r\n                    <Container maxWidth=\"sm\">\r\n                        <Typography\r\n                            component=\"h1\"\r\n                            variant=\"h2\"\r\n                            align=\"center\"\r\n                            color=\"text.primary\"\r\n                            gutterBottom\r\n                        >\r\n                            부동산\r\n                        </Typography>\r\n                        <Stack\r\n                            sx={{ pt: 4 }}\r\n                            direction=\"row\"\r\n                            spacing={2}\r\n                            justifyContent=\"center\"\r\n                        >\r\n                            <Box sx={{ minWidth: 200 }}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id=\"demo-simple-select-label\">지역</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={area}\r\n                                        label=\"locationv\"\r\n                                        onChange={(e) =>\r\n                                            setArea(e.target.value)}\r\n                                    >\r\n                                        <MenuItem value={\"대전\"}>대전</MenuItem>\r\n                                        <MenuItem value={\"서울\"}>서울</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            <Button variant=\"contained\" onClick={() => {\r\n                                navigate(\"/post-Checkout\", { state: location.state })\r\n                            }}>판매 등록</Button>\r\n                            <Button variant=\"outlined\">매물 검색</Button>\r\n                            <Button variant=\"outlined\" >구매</Button>\r\n                        </Stack>\r\n                    </Container>\r\n                </Box>\r\n                <Container sx={{ py: 8 }} maxWidth=\"md\">\r\n                    {/* End hero unit */}\r\n                    <Mainpage_Card cards={cards} user={location.state}></Mainpage_Card>\r\n                </Container>\r\n            </main>\r\n            {/* Footer */}\r\n            {/* <Box sx={{ bgcolor: 'background.paper', p: 6 }} component=\"footer\">\r\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n                </Typography>\r\n                <Typography\r\n                    variant=\"subtitle1\"\r\n                    align=\"center\"\r\n                    color=\"text.secondary\"\r\n                    component=\"p\"\r\n                >\r\n                </Typography>\r\n            </Box> */}\r\n            <Box sx={{ bgcolor: 'background.paper', p: 6 }} component=\"footer\">\r\n                <BuyLogText LogText={ALL_BuyLogText}></BuyLogText>\r\n            </Box>\r\n            {/* End footer */}\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default Mainpage;","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\NewMemberPage.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\registration\\HouseInfoInsert.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\HouseInfoPage.jsx",["97","98"],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\UserMyPage.jsx",["99","100","101","102","103","104"],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\registration\\HouseInfoUpdate.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\RoomList_Dialog.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Mainpage_Card.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Notify_Dialog.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Make_Chatting.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\RoomList.jsx",["105"],"//#region react\r\nimport React, { useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n//#endregion\r\n\r\n//#region mui\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Divider from '@mui/material/Divider';\r\nimport List from '@mui/material/List';\r\nimport Chatting from \"./Chatting\"\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport { Button } from \"@mui/material\";\r\n//#endregion\r\n\r\nlet socket;\r\n\r\nfunction RoomList(props) {\r\n\r\n    const ENDPOINT = \"http://localhost:8080\";\r\n\r\n    const { value, username } = props;\r\n\r\n    useEffect(() => {\r\n        socket = io(ENDPOINT);\r\n    }, []);\r\n\r\n    async function RoomSerach(value) {\r\n        socket.emit(\"Search_Room\", { value });\r\n        await socket.on('Search_Room_Result', (result) => {\r\n            if (result.result[0].Buyername === username) {\r\n                socket.emit(\"GetOutRoom_Buyername\", { value, username });\r\n                socket.on('GetOutRoom_Buyername_Result', () => {\r\n                    socket.emit(\"Search_Room\", { value });\r\n                    socket.on('Search_Room_Result', (result) => {\r\n                        if (result.result[0].Sellername === null) {\r\n                            socket.emit(\"GetOutRoom\", { value });\r\n                            socket.on('GetOutRoom_Result', (result) => {\r\n                                alert(result)\r\n                                window.location.replace(\"/post-MainPage\")\r\n                            })\r\n                        }\r\n                        else{\r\n                            alert(\"삭제완료\")\r\n                            window.location.replace(\"/post-MainPage\")\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            else if (result.result[0].Sellername === username) {\r\n                socket.emit(\"GetOutRoom_Sellername\", { value, username });\r\n                socket.on('GetOutRoom_Sellername_Result', () => {\r\n                    socket.emit(\"Search_Room\", { value });\r\n                    socket.on('Search_Room_Result', (result) => {\r\n                        if (result.result[0].Buyername === null) {\r\n                            socket.emit(\"GetOutRoom\", { value });\r\n                            socket.on('GetOutRoom_Result', (result) => {\r\n                                alert(result)\r\n                                window.location.replace(\"/post-MainPage\")\r\n                            })\r\n                        }\r\n                        else{\r\n                            alert(\"삭제완료\")\r\n                            window.location.replace(\"/post-MainPage\")\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    function RoomOut(value) {\r\n        socket.emit(\"GetOutRoom\", { value });\r\n        socket.on('GetOutRoom_Result', (result) => {\r\n            alert(result)\r\n            window.location.replace(\"/post-MainPage\")\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            {value.map((value) => (\r\n                <List key={value.toString()}>\r\n                    <ListItem disablePadding>\r\n                        <ListItemButton>\r\n                            <ListItemText primary={value} secondary=\"메세지내용\" />\r\n                        </ListItemButton>\r\n                        <Chatting value={value} buyername={username}></Chatting>\r\n                        <Button\r\n                            onClick={() => {\r\n                                RoomSerach(value)\r\n                            }}\r\n                        >OUT</Button>\r\n                    </ListItem>\r\n                    <Divider />\r\n                </List>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoomList;","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Chatting.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\LogText.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\page\\UserUpdatePage.jsx",["106","107","108"],"//#region react\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from \"react-router\";\r\nimport io from \"socket.io-client\";\r\n//#endregion\r\n\r\n//#region mui\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//#endregion\r\n\r\nlet socket;\r\n\r\nconst theme = createTheme();\r\n\r\nconst NewMember = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation()\r\n\r\n    const ENDPOINT = \"http://localhost:8080\";\r\n\r\n    const [name, setName] = useState(location.state[0][0].name);\r\n    const [id] = useState(location.state[0][0].id);\r\n    const [pw, setPw] = useState(location.state[0][0].pw);\r\n    const [phoneNum, setPhoneNum] = useState(location.state[0][0].number);\r\n    const [MetaMaskAcc, setMetaMaskAcc] = useState(location.state[0][0].MetaMaskAcc);\r\n\r\n\r\n    useEffect(() => {\r\n        socket = io(ENDPOINT);\r\n    }, []);\r\n\r\n    function Sign_up() {\r\n        if (name === \"\" || id === \"\" || pw === \"\" || phoneNum === \"\" || MetaMaskAcc === \"\") {\r\n            alert(\"입력하지 않은 정보가 있습니다\");\r\n        }\r\n        else {\r\n            console.log(phoneNum)\r\n            socket.emit(\"UserUpdate\", { name, id, pw, phoneNum, MetaMaskAcc });\r\n            socket.on(\"UserUpdate_Result\", (CheckMsg) => {\r\n                alert(CheckMsg);\r\n            })\r\n            navigate('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        회원 정보 수정\r\n                    </Typography>\r\n                    <Box component=\"form\" noValidate sx={{ mt: 3 }}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    autoComplete=\"given-name\"\r\n                                    name=\"name\"\r\n                                    required\r\n                                    fullWidth\r\n                                    label=\"name\"                                    \r\n                                    value={name}\r\n                                    autoFocus\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    name=\"id\"\r\n                                    label=\"id\"\r\n                                    defaultValue={id}\r\n                                    type=\"id\"\r\n                                    id=\"id\"\r\n                                    InputProps={{\r\n                                        readOnly: true,\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    value={pw}\r\n                                    id=\"password\"\r\n                                    autoComplete=\"new-password\"\r\n                                    onChange={(e) => setPw(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"number\"\r\n                                    label=\"전화번호\"\r\n                                    value={phoneNum}\r\n                                    name=\"number\"\r\n                                    autoComplete=\"number\"\r\n                                    onChange={(e) => setPhoneNum(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"MetaMaskAcc\"\r\n                                    label=\"MetaMaskAcc\"\r\n                                    value={MetaMaskAcc}\r\n                                    name=\"MetaMaskAcc\"\r\n                                    autoComplete=\"MetaMaskAcc\"\r\n                                    onChange={(e) => setMetaMaskAcc(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2 }}\r\n                            onClick={() => {\r\n                                Sign_up();\r\n                            }}\r\n                        >\r\n                            정보 수정\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default NewMember;","C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\TransactionText.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\BuyLogText.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Mypage_SellCard.jsx",[],"C:\\Users\\user\\Desktop\\2022\\Truffle-React\\front\\client\\src\\component\\ui\\Mypage_BuyCard.jsx",["109","110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":103,"column":7,"nodeType":"117","endLine":103,"endColumn":9,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":101,"column":8,"nodeType":"117","endLine":101,"endColumn":18,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":105,"column":20,"nodeType":"123","messageId":"124","endLine":105,"endColumn":28},{"ruleId":"121","severity":1,"message":"125","line":35,"column":5,"nodeType":"123","messageId":"124","endLine":35,"endColumn":13},{"ruleId":"121","severity":1,"message":"126","line":36,"column":5,"nodeType":"123","messageId":"124","endLine":36,"endColumn":9},{"ruleId":"121","severity":1,"message":"127","line":47,"column":24,"nodeType":"123","messageId":"124","endLine":47,"endColumn":37},{"ruleId":"121","severity":1,"message":"128","line":48,"column":12,"nodeType":"123","messageId":"124","endLine":48,"endColumn":20},{"ruleId":"121","severity":1,"message":"129","line":52,"column":9,"nodeType":"123","messageId":"124","endLine":52,"endColumn":14},{"ruleId":"121","severity":1,"message":"130","line":53,"column":9,"nodeType":"123","messageId":"124","endLine":53,"endColumn":17},{"ruleId":"121","severity":1,"message":"131","line":72,"column":14,"nodeType":"123","messageId":"124","endLine":72,"endColumn":21},{"ruleId":"121","severity":1,"message":"132","line":12,"column":8,"nodeType":"123","messageId":"124","endLine":12,"endColumn":24},{"ruleId":"121","severity":1,"message":"133","line":13,"column":8,"nodeType":"123","messageId":"124","endLine":13,"endColumn":16},{"ruleId":"121","severity":1,"message":"134","line":14,"column":8,"nodeType":"123","messageId":"124","endLine":14,"endColumn":12},{"ruleId":"121","severity":1,"message":"135","line":21,"column":5,"nodeType":"123","messageId":"124","endLine":21,"endColumn":11},{"ruleId":"121","severity":1,"message":"136","line":27,"column":11,"nodeType":"123","messageId":"124","endLine":27,"endColumn":19},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Arr_BuyLogText' and 'location.state'. Either include them or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'locations'. Either include it or remove the dependency array.",["140"],"no-unused-vars","'BuyHouse' is defined but never used.","Identifier","unusedVar","'instance' is assigned a value but never used.","'area' is assigned a value but never used.","'setNewdetails' is assigned a value but never used.","'accounts' is assigned a value but never used.","'count' is assigned a value but never used.","'newcards' is assigned a value but never used.","'RoomOut' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'socket' is assigned a value but never used.","'navigate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [Arr_BuyLogText, location.state]",{"range":"145","text":"146"},"Update the dependencies array to be: [location, locations]",{"range":"147","text":"148"},[3557,3559],"[Arr_BuyLogText, location.state]",[3586,3596],"[location, locations]"]