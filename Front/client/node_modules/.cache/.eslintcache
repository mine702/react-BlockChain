[{"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\index.js":"1","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\App.js":"2","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\reportWebVitals.js":"3","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\page\\MainPage.jsx":"4","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\page\\UserMyPage.jsx":"5","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\page\\HouseInfoPage.jsx":"6","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\page\\registration\\HouseInfoUpdate.jsx":"7","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\page\\registration\\HouseInfoInsert.jsx":"8","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\page\\NewMemberPage.jsx":"9","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\page\\LoginPage.jsx":"10","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\RoomList_Dialog.jsx":"11","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\Notify_Dialog.jsx":"12","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\Mypage_Card.jsx":"13","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\Make_Chatting.jsx":"14","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\Mainpage_Card.jsx":"15","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\RoomList.jsx":"16","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\LogText.jsx":"17","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\Chatting.jsx":"18"},{"size":552,"mtime":1656486794107,"results":"19","hashOfConfig":"20"},{"size":1735,"mtime":1656637997972,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1656486794111,"results":"22","hashOfConfig":"20"},{"size":8087,"mtime":1656637872432,"results":"23","hashOfConfig":"20"},{"size":6605,"mtime":1656486794064,"results":"24","hashOfConfig":"20"},{"size":7513,"mtime":1656486794052,"results":"25","hashOfConfig":"20"},{"size":7925,"mtime":1656486794070,"results":"26","hashOfConfig":"20"},{"size":6264,"mtime":1656486794067,"results":"27","hashOfConfig":"20"},{"size":8704,"mtime":1656486794061,"results":"28","hashOfConfig":"20"},{"size":4856,"mtime":1656486794056,"results":"29","hashOfConfig":"20"},{"size":2706,"mtime":1656486794101,"results":"30","hashOfConfig":"20"},{"size":1470,"mtime":1656486794093,"results":"31","hashOfConfig":"20"},{"size":3649,"mtime":1656486794091,"results":"32","hashOfConfig":"20"},{"size":5379,"mtime":1656486794085,"results":"33","hashOfConfig":"20"},{"size":1722,"mtime":1656486794081,"results":"34","hashOfConfig":"20"},{"size":1723,"mtime":1656486794097,"results":"35","hashOfConfig":"20"},{"size":288,"mtime":1656486794079,"results":"36","hashOfConfig":"20"},{"size":3781,"mtime":1656486794074,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"qnbdf6",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\index.js",[],["80","81"],"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\App.js",["82","83"],"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\reportWebVitals.js",[],"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\page\\MainPage.jsx",["84","85","86"],"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\page\\UserMyPage.jsx",["87"],"//#region react\r\nimport React, { useState, useEffect } from 'react';\r\nimport io from \"socket.io-client\";\r\n//#endregion\r\n\r\n//#region mui\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { useNavigate, useLocation } from \"react-router\";\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport Container from '@mui/material/Container';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\n//#endregion\r\n\r\n//#region component\r\nimport Mypage_Card from '../ui/Mypage_Card';\r\n//#endregion\r\n\r\nlet socket;\r\n\r\n\r\n\r\nfunction PrimarySearchAppBar() {\r\n\r\n    const ENDPOINT = \"http://localhost:8080\";\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    \r\n    const [cards, setCardsLow] = useState([]);\r\n    const [number, setNumber] = useState()\r\n    const [name, setName] = useState(\"\")\r\n    const [username] = useState(location.state[0][0].name);\r\n\r\n    useEffect(() => {\r\n        socket = io(ENDPOINT);\r\n        console.log(location);\r\n        setNumber(location.state[0][0].number)\r\n        setName(location.state[0][0].name)\r\n    }, [location]);    \r\n\r\n    useEffect(() => {        \r\n        socket.emit(\"MyPageSell\", { name, number });\r\n        socket.on(\"MyPageSell_Result\", (Result) => {\r\n            setCardsLow(Result);\r\n        })\r\n    }, [name, number])\r\n\r\n    useEffect(()=>{\r\n        \r\n    },[location])\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (\r\n            event &&\r\n            event.type === 'keydown' &&\r\n            (event.key === 'Tab' || event.key === 'Shift')\r\n        ) {\r\n            return;\r\n        }\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n    const [state, setState] = React.useState({\r\n        left: false\r\n    });\r\n    function SendMessage() {\r\n        navigate(\"/post-MainPage\", { state: location.state[0] });\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={toggleDrawer(\"left\", true)}\r\n                        edge=\"start\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <SwipeableDrawer\r\n                        anchor=\"left\"\r\n                        open={state[\"left\"]}\r\n                        onClose={toggleDrawer(\"left\", false)}\r\n                        onOpen={toggleDrawer(\"left\", true)}\r\n                    >\r\n                        <Box\r\n                            sx={{ width: \"left\" === 'top' || \"left\" === 'bottom' ? 'auto' : 250 }}\r\n                            role=\"presentation\"\r\n                            onClick={toggleDrawer(\"left\", false)}\r\n                            onKeyDown={toggleDrawer(\"left\", false)}\r\n                        >\r\n                            <List>\r\n                                <ListItem key=\"마이페이지\" disablePadding sx={{ display: 'block' }}>\r\n                                    <Divider />\r\n                                    <ListItemButton>\r\n                                        <ListItemText onClick={() => {\r\n                                            navigate(\"/\")\r\n                                        }} primary=\"LogOut\" />\r\n                                    </ListItemButton>\r\n                                    <ListItemButton>\r\n                                        <ListItemText onClick={SendMessage} primary=\"MainPage\" />\r\n                                    </ListItemButton>\r\n                                </ListItem>\r\n                            </List>\r\n                        </Box>\r\n                    </SwipeableDrawer>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{ display: { xs: 'none', sm: 'block' } }}\r\n                    >\r\n                        MyPage\r\n                    </Typography>\r\n                    <Box sx={{ flexGrow: 1 }} />\r\n                    접속중인 사람 : {username}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box\r\n                sx={{\r\n                    bgcolor: 'background.paper',\r\n                    pt: 8,\r\n                    pb: 6,\r\n                }}\r\n            >\r\n                <Container>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h2\"\r\n                        align=\"center\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                    >\r\n                        MyPage\r\n                    </Typography>\r\n                    <Card\r\n                        sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n                    >\r\n                        <CardContent sx={{ flexGrow: 1 }}>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                판매내역\r\n                            </Typography>\r\n                            <Mypage_Card cards={cards} user={location.state}></Mypage_Card>\r\n                        </CardContent>\r\n                    </Card>\r\n                    <br />\r\n                    <Card\r\n                        sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n                    >\r\n                        <CardContent sx={{ flexGrow: 1 }}>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                구매내역\r\n                            </Typography>\r\n                            <Typography>\r\n                                This is a media card. You can use this section to describe the\r\n                                content.\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Container>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default PrimarySearchAppBar;\r\n","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\page\\HouseInfoPage.jsx",["88","89"],"//#region react\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router\";\r\n//#endregion\r\n\r\n//#region mui\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport Container from '@mui/material/Container';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardMedia from '@mui/material/CardMedia';\r\n//#endregion\r\n\r\n//#region component\r\nimport Notify_Dialog from \"../ui/Notify_Dialog\"\r\nimport Make_Chatting from \"../ui/Make_Chatting\";\r\n//#endregion\r\n\r\nfunction HouseInfoPage() {\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [sellername] = useState(location.state[0].name);\r\n    const [buyername] = useState(location.state[1][0].name);\r\n    \r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (\r\n            event &&\r\n            event.type === 'keydown' &&\r\n            (event.key === 'Tab' || event.key === 'Shift')\r\n        ) {\r\n            return;\r\n        }\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const [state, setState] = React.useState({\r\n        left: false\r\n    });\r\n\r\n   \r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={toggleDrawer(\"left\", true)}\r\n                        edge=\"start\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <SwipeableDrawer\r\n                        anchor=\"left\"\r\n                        open={state[\"left\"]}\r\n                        onClose={toggleDrawer(\"left\", false)}\r\n                        onOpen={toggleDrawer(\"left\", true)}\r\n                    >\r\n                        <Box\r\n                            sx={{ width: \"left\" === 'top' || \"left\" === 'bottom' ? 'auto' : 250 }}\r\n                            role=\"presentation\"\r\n                            onClick={toggleDrawer(\"left\", false)}\r\n                            onKeyDown={toggleDrawer(\"left\", false)}\r\n                        >\r\n                            <List>\r\n                                <ListItem key=\"마이페이지\" disablePadding sx={{ display: 'block' }}>\r\n                                    <Divider />\r\n                                    <ListItemButton>\r\n                                        <ListItemText onClick={() => {\r\n                                            navigate(\"/\")\r\n                                        }} primary=\"LogOut\" />\r\n                                    </ListItemButton>\r\n                                    <ListItemButton>\r\n                                        <ListItemText onClick={()=>{\r\n                                            navigate(\"/post-MainPage\", { state: location.state[1] });\r\n                                        }} primary=\"MainPage\" />\r\n                                    </ListItemButton>\r\n                                </ListItem>\r\n                            </List>\r\n                        </Box>\r\n                    </SwipeableDrawer>\r\n\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{ display: { xs: 'none', sm: 'block' } }}\r\n                    >\r\n                        Buy\r\n                    </Typography>&nbsp;\r\n                    <ShoppingCartIcon />\r\n                    <Box sx={{ flexGrow: 1 }} />\r\n                    접속중인 사람 : {location.state[1][0].name}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box\r\n                sx={{\r\n                    bgcolor: 'background.paper',\r\n                    pt: 8,\r\n                    pb: 6,\r\n                }}\r\n            >\r\n                <Container>\r\n                    <Card\r\n                        sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n                    >\r\n                        <CardContent sx={{ flexGrow: 1 }}>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                판매자 정보\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"h6\">\r\n                                &nbsp;&nbsp;이름 : {location.state[0].name}<br />\r\n                                &nbsp;&nbsp;전화번호 : {location.state[0].number}\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                가격\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"h6\">\r\n                                &nbsp;&nbsp;{location.state[0].price} (ETH)\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                사진\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <Container><Container><Container><Container><Container><Container><Container><Container><Container>\r\n                            <Card>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    sx={{\r\n                                        pt: '0%',\r\n                                    }}\r\n                                    src={location.state[0].files}\r\n                                    alt=\"random\"\r\n                                />\r\n                            </Card>\r\n                        </Container></Container></Container></Container></Container></Container></Container></Container></Container>\r\n                        <CardContent sx={{ flexGrow: 1 }}>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                주소\r\n                            </Typography>\r\n                            <Typography>\r\n                                &nbsp;&nbsp;{location.state[0].address}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Box sx={{ flexGrow: 1 }} />\r\n                            <Notify_Dialog warningHead={\"구매 확인\"} warningButton={\"BUY\"} warning={\"정말 구매하시겠습니까?\"}></Notify_Dialog>\r\n                            <Make_Chatting sellername={sellername} buyername={buyername} ></Make_Chatting>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Container>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default HouseInfoPage;\r\n","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\page\\registration\\HouseInfoUpdate.jsx",[],"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\page\\registration\\HouseInfoInsert.jsx",[],"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\page\\NewMemberPage.jsx",[],"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\page\\LoginPage.jsx",[],"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\RoomList_Dialog.jsx",[],"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\Notify_Dialog.jsx",[],"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\Mypage_Card.jsx",["90"],"//#region react\r\nimport React, { useEffect } from 'react';\r\n//#endregion\r\n\r\n//#region mui\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Box from '@mui/material/Box';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\n//#endregion\r\n\r\n//#region component\r\nimport Notify_Dialog from \"../ui/Notify_Dialog\";\r\nimport io from \"socket.io-client\";\r\n//#endregion\r\n\r\nlet socket;\r\n\r\n\r\n\r\nfunction Mypage_Card(props) {\r\n\r\n    const ENDPOINT = \"http://localhost:8080\";\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { cards, user } = props;\r\n    \r\n    useEffect(() => {\r\n        socket = io(ENDPOINT);\r\n    },[])\r\n\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {cards.map((card) => (\r\n                <Grid item xs={5} sm={6} md={2.9} key={card._id}>\r\n                    <Card\r\n                        sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n                    >\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            sx={{\r\n                                // 16:9\r\n                                pt: '0%',\r\n                                maxWidth: 250,\r\n                                minWidth:250,\r\n                                minHeight: 150,\r\n                                maxHeight: 150\r\n                            }}\r\n                            src={card.files}\r\n                            alt=\"random\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography sx={{ fontSize: 14 }} gutterBottom>\r\n                                Location : {card.location}\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 14 }} gutterBottom>\r\n                                Price : {card.price}\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 14 }} gutterBottom>\r\n                                room : {card.room}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Box sx={{ flexGrow: 1 }} />\r\n                            <Button size=\"small\" onClick={() => {\r\n                                navigate(\"/post-CorrectionForm\", { state: [card, user[0]] })\r\n                            }}>정보 수정</Button>\r\n                            <Notify_Dialog\r\n                                warningHead={\"게시글을 삭제\"}\r\n                                warningButton={\"삭제\"}\r\n                                warning={\"정말 게시글을 삭제 하시겠습니까?\"}\r\n                                OkButtonClick={() => {\r\n                                    socket.emit(\"Delete_Data\", { card });\r\n                                    socket.on(\"Delete_Data_Result\", (Result) => {\r\n                                        alert(Result);\r\n                                        socket.off(); \r\n                                        window.location.replace(\"/post-UserMyPage\")                                    \r\n                                    })\r\n                                }}\r\n                            ></Notify_Dialog>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n            ))}\r\n        </Grid>)\r\n}\r\n\r\nexport default Mypage_Card;","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\Make_Chatting.jsx",["91"],"//#region react\r\nimport React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport io from \"socket.io-client\";\r\nimport LogText from \"./LogText\"\r\n//#endregion \r\n\r\n//#region mui\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n//#endregion \r\n\r\nlet socket;\r\n\r\nfunction MakeChatting(props) {\r\n\r\n    const ENDPOINT = \"http://localhost:8080\";\r\n\r\n    const { sellername, buyername } = props;\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [roommax] = useState([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\r\n    const [sendmsg, setSendMsg] = useState(\"\");\r\n    const [chatlog, setChatlog] = useState([{}]);\r\n    const [RoomNumber, setRoomNumber] = useState();\r\n\r\n    // 함수가 실행될때 modal의 상태를 true로 바꿔준다.\r\n    function openModal() {\r\n        if (sellername === buyername) {\r\n            alert(\"본인의 매물을 구매할 수 없습니다.\")\r\n        }\r\n        else {\r\n            setIsOpen(true);\r\n            MakeRoom()\r\n        }\r\n    }\r\n\r\n    // 함수가 실행될때 modal의 상태를 false로 바꿔준다.\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket = io(ENDPOINT);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"Msg_return\", ({ buyername, sendmsg }) => {\r\n            setChatlog([...chatlog, { name: buyername, msg: sendmsg }]);\r\n        })\r\n        if(chatlog.length !== 0 && chatlog.length !== 1)\r\n        {\r\n            socket.emit(\"Save_Msg\",({chatlog, RoomNumber}));\r\n        }\r\n    }, [chatlog])\r\n\r\n    const roomn = []\r\n    let makeroom = []\r\n    let roomnumber = 0;\r\n\r\n    function MakeRoom() {\r\n        socket.emit(\"Room_Search\");\r\n        socket.on(\"Room_Search_Result\", (result) => {\r\n\r\n            for (let i = 0; i < result.length; i++) {\r\n                roomn.push(result[i].RoomN)\r\n            }\r\n            console.log(`res: ${result}`);\r\n            makeroom = roommax.filter(x => !roomn.includes(x))\r\n            if (makeroom.length === 10) {  //방이 없을때\r\n                roomnumber = makeroom[0]\r\n                setRoomNumber(makeroom[0])\r\n                console.log(RoomNumber);\r\n                socket.emit(\"Room_Make\", { sellername, buyername, roomnumber });\r\n                // eslint-disable-next-line no-loop-func\r\n                socket.on(\"Room_Make_Result\", () => {\r\n                    socket.emit(\"Chatting_Join\", { roomnumber });\r\n                })\r\n            }\r\n            else {  //방이 있을때                \r\n                for (let i = 0; i < result.length; i++) {\r\n                    if (result[i].Sellername === sellername && result[i].Buyername === buyername) {\r\n                        roomnumber = result[i].RoomN   \r\n                        console.log(result[i].Msg)                     \r\n                        console.log(roomnumber);\r\n                        setRoomNumber(roomnumber)                        \r\n                        socket.emit(\"Chatting_Join\", { roomnumber });\r\n                        setChatlog(result[i].Msg)\r\n                        socket.emit(\"Load_Msg_Makechat\", { roomnumber });\r\n                        socket.on('Return_Load_Msg_Makechat', ({ result }) => {\r\n                            setChatlog(result);\r\n                            //console.log(result)\r\n                            //setChatlog([...chatlog, { name: Oname, msg: sendmsg }]);\r\n                        })\r\n                        break\r\n                    }\r\n                    else if (i === result.length - 1) {\r\n                        console.log(\"방이없다\")\r\n                        roomnumber = makeroom[0]\r\n                        setRoomNumber(makeroom[0])\r\n                        socket.emit(\"Room_Make\", { sellername, buyername, roomnumber });\r\n                        // eslint-disable-next-line no-loop-func\r\n                        socket.on(\"Room_Make_Result\", () => {\r\n                            socket.emit(\"Chatting_Join\", { roomnumber });\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    function SendMessage() {\r\n        socket.emit(\"Message_Send\", { buyername, sendmsg, RoomNumber });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={() => {\r\n                openModal()\r\n            }}>CHATTING</Button>\r\n            <Modal isOpen={modalIsOpen} ariaHideApp={false}>\r\n                <LogText log={chatlog} ></LogText>\r\n                <TextField\r\n                    margin='normal'\r\n                    required\r\n                    fullWidth\r\n                    id=\"Message\"\r\n                    label=\"Message\"\r\n                    name=\"Message\"\r\n                    autoComplete=\"Message\"\r\n                    autoFocus\r\n                    onChange={(e) => setSendMsg(e.target.value)}\r\n                />\r\n                <ButtonGroup disableElevation variant=\"contained\">\r\n                    <Button variant=\"contained\" onClick={() => { closeModal() }}>CLOSE</Button>\r\n                    <Button variant=\"contained\" endIcon={<SendIcon />} onClick={() => { SendMessage() }} >SEND</Button>\r\n                </ButtonGroup>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MakeChatting;","C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\Mainpage_Card.jsx",[],"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\RoomList.jsx",[],"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\LogText.jsx",[],"C:\\Users\\cyr50\\OneDrive\\바탕 화면\\비트고급 프로젝트_tuffle\\Front\\client\\src\\component\\ui\\Chatting.jsx",["92"],"//#region react\r\nimport React, { useState, useEffect } from 'react';\r\n//#endregion\r\n\r\n//#region mui\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport io from \"socket.io-client\";\r\nimport LogText from \"./LogText\"\r\nimport Box from '@mui/material/Box';\r\n//#endregion\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    bgcolor: 'background.paper',\r\n    height: '80%',\r\n    width: '40%',\r\n    border: '2px solid #000',\r\n    pt: 2,\r\n    px: 4,\r\n    pb: 3,\r\n};\r\n\r\nlet socket;\r\n\r\nfunction Chatting(props) {\r\n\r\n    const ENDPOINT = \"http://localhost:8080\";\r\n\r\n    const { value , buyername } = props\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [chatlog, setChatlog] = useState([{}]);\r\n    const [sendmsg, setSendMsg] = useState(\"\");\r\n    const [RoomNumber] = useState(value); \r\n\r\n   \r\n    let roomnumber = 0;\r\n    \r\n    // 함수가 실행될때 modal의 상태를 true로 바꿔준다.\r\n    function openModal() {\r\n        roomnumber=RoomNumber;\r\n        socket.emit(\"Chatting_Join\",{roomnumber});\r\n        socket.on('Join_return',({roomnumber})=>{\r\n            console.log(\"성공\");\r\n        })\r\n        socket.emit(\"Load_Msg_Chat\",{RoomNumber});\r\n        socket.on('Return_Load_Msg_Chat',({result})=> {\r\n            setChatlog(result);\r\n        //setChatlog([...chatlog, { name: Oname, msg: sendmsg }]);\r\n        })\r\n        setIsOpen(true);\r\n        \r\n    }\r\n\r\n    // 함수가 실행될때 modal의 상태를 false로 바꿔준다.\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        socket = io(ENDPOINT);        \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [ENDPOINT]);\r\n\r\n    useEffect(()=>{\r\n        \r\n        socket.on(\"Msg_return\", ({ buyername, sendmsg }) => {\r\n            console.log(\"신호\");\r\n            setChatlog([...chatlog, { name: buyername, msg: sendmsg }]);\r\n        })\r\n        if(chatlog.length !== 0 && chatlog.length !== 1)\r\n        {\r\n            socket.emit(\"Save_Msg\",({chatlog, RoomNumber}));\r\n        }\r\n    },[chatlog]);\r\n\r\n    function SendMessage() {\r\n        \r\n        socket.emit(\"Message_Send\", { buyername, sendmsg, RoomNumber });        \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button onClick={openModal}>Chatting</Button>\r\n            <Modal\r\n                hideBackdrop\r\n                open={modalIsOpen}\r\n                onClose={closeModal}\r\n                aria-labelledby=\"child-modal-title\"\r\n                aria-describedby=\"child-modal-description\"\r\n            >\r\n                <Box sx={{ ...style }}>\r\n                    <LogText log={chatlog} ></LogText>\r\n                    <TextField\r\n                        margin='normal'\r\n                        required\r\n                        fullWidth\r\n                        id=\"Message\"\r\n                        label=\"Message\"\r\n                        name=\"Message\"\r\n                        autoComplete=\"Message\"\r\n                        autoFocus\r\n                        onChange={(e) => setSendMsg(e.target.value)}\r\n                    />\r\n                    <ButtonGroup disableElevation variant=\"contained\">\r\n                        <Button variant=\"contained\" onClick={() => { closeModal() }}>CLOSE</Button>\r\n                        <Button variant=\"contained\" endIcon={<SendIcon />} onClick={() => { SendMessage() }} >SEND</Button>\r\n                    </ButtonGroup>\r\n                </Box>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Chatting;",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":16,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"101","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":35},{"ruleId":"97","severity":1,"message":"102","line":2,"column":38,"nodeType":"99","messageId":"100","endLine":2,"endColumn":48},{"ruleId":"103","severity":1,"message":"104","line":130,"column":21,"nodeType":"105","messageId":"106","endLine":130,"endColumn":54},{"ruleId":"103","severity":1,"message":"107","line":187,"column":21,"nodeType":"105","messageId":"106","endLine":187,"endColumn":72},{"ruleId":"103","severity":1,"message":"108","line":154,"column":29,"nodeType":"105","messageId":"106","endLine":154,"endColumn":78},{"ruleId":"103","severity":1,"message":"109","line":164,"column":29,"nodeType":"105","messageId":"106","endLine":164,"endColumn":113},{"ruleId":"103","severity":1,"message":"110","line":165,"column":29,"nodeType":"105","messageId":"106","endLine":165,"endColumn":91},{"ruleId":"103","severity":1,"message":"109","line":74,"column":29,"nodeType":"105","messageId":"106","endLine":86,"endColumn":30},{"ruleId":"111","severity":1,"message":"112","line":57,"column":8,"nodeType":"113","endLine":57,"endColumn":17,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"112","line":83,"column":7,"nodeType":"113","endLine":83,"endColumn":16,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useReducer' is defined but never used.","react/jsx-pascal-case","Imported JSX component RoomList_Dialog must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Mainpage_Card must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Mypage_Card must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Notify_Dialog must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Make_Chatting must be in PascalCase or SCREAMING_SNAKE_CASE","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'RoomNumber'. Either include it or remove the dependency array.","ArrayExpression",["118"],["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"120","fix":"122"},"Update the dependencies array to be: [RoomNumber, chatlog]",{"range":"123","text":"124"},{"range":"125","text":"124"},[1590,1599],"[RoomNumber, chatlog]",[2233,2242]]