{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\2022\\\\main\\\\Front\\\\client\\\\src\\\\component\\\\ui\\\\Make_Chatting.jsx\",\n    _s = $RefreshSig$();\n\n//#region react\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport io from \"socket.io-client\";\nimport LogText from \"./LogText\"; //#endregion \n//#region mui\n\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport SendIcon from '@mui/icons-material/Send'; //#endregion \n//#region 전역 변수\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket; //#endregion\n\nfunction MakeChatting(props) {\n  _s();\n\n  const ENDPOINT = \"http://localhost:8080\";\n  const {\n    seller_name,\n    buyer_name\n  } = props; //#region useState\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [roommax] = useState([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  const [send_msg, setsend_msg] = useState(\"\");\n  const [chat_log, setchat_log] = useState([{}]);\n  const [Room_Number, setRoomNumber] = useState(); //#endregion\n  //#region 함수가 실행될때 modal의 상태를 true로 바꿔준다.\n\n  function openModal() {\n    if (seller_name === buyer_name) {\n      alert(\"본인의 매물을 구매할 수 없습니다.\");\n    } else {\n      setIsOpen(true);\n      MakeRoom();\n    }\n  } //#endregion\n  //#region 함수가 실행될때 modal의 상태를 false로 바꿔준다.\n\n\n  function closeModal() {\n    setIsOpen(false);\n  } //#endregion\n  //#region useEffect\n\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n  }, []);\n  useEffect(() => {\n    socket.on(\"Msg_return\", _ref => {\n      let {\n        buyer_name,\n        send_msg\n      } = _ref;\n      setchat_log([...chat_log, {\n        name: buyer_name,\n        msg: send_msg\n      }]);\n    });\n\n    if (chat_log.length !== 0 && chat_log.length !== 1) {\n      socket.emit(\"Save_Msg\", {\n        chat_log,\n        Room_Number\n      });\n    }\n  }, [chat_log]); //#endregion\n  //#region 지역 변수\n\n  const roomn = [];\n  let makeroom = [];\n  let roomnumber = 0; //#endregion\n  //#region 채팅방 생성\n\n  function MakeRoom() {\n    socket.emit(\"Room_Search\");\n    socket.on(\"Room_Search_Result\", result => {\n      for (let i = 0; i < result.length; i++) {\n        roomn.push(result[i].RoomN);\n      }\n\n      console.log(`res: ${result}`);\n      makeroom = roommax.filter(x => !roomn.includes(x));\n\n      if (makeroom.length === 10) {\n        //방이 없을때\n        roomnumber = makeroom[0];\n        setRoomNumber(makeroom[0]);\n        socket.emit(\"Room_Make\", {\n          seller_name,\n          buyer_name,\n          roomnumber\n        });\n        socket.on(\"Room_Make_Result\", () => {\n          socket.emit(\"Chatting_Join\", {\n            roomnumber\n          });\n        });\n      } else {\n        //방이 있을때                \n        for (let i = 0; i < result.length; i++) {\n          if (result[i].seller_name === seller_name && result[i].buyer_name === buyer_name) {\n            roomnumber = result[i].RoomN;\n            console.log(result[i].Msg);\n            console.log(roomnumber);\n            setRoomNumber(roomnumber);\n            socket.emit(\"Chatting_Join\", {\n              roomnumber\n            });\n            setchat_log(result[i].Msg);\n            socket.emit(\"Load_Msg_Makechat\", {\n              roomnumber\n            });\n            socket.on('Return_Load_Msg_Makechat', _ref2 => {\n              let {\n                result\n              } = _ref2;\n              setchat_log(result);\n            });\n            break;\n          } else if (i === result.length - 1) {\n            console.log(\"방이없다\");\n            roomnumber = makeroom[0];\n            setRoomNumber(makeroom[0]);\n            socket.emit(\"Room_Make\", {\n              seller_name,\n              buyer_name,\n              roomnumber\n            });\n            socket.on(\"Room_Make_Result\", () => {\n              socket.emit(\"Chatting_Join\", {\n                roomnumber\n              });\n            });\n          }\n        }\n      }\n    });\n  } //#endregion\n  //#region 메세지 전달 함수\n\n\n  function SendMessage() {\n    socket.emit(\"Message_Send\", {\n      buyer_name,\n      send_msg,\n      Room_Number\n    });\n  } //#endregion\n  //#region 렌더링\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        openModal();\n      },\n      children: \"CHATTING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      ariaHideApp: false,\n      children: [/*#__PURE__*/_jsxDEV(LogText, {\n        log: chat_log\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"Message\",\n        label: \"Message\",\n        name: \"Message\",\n        autoComplete: \"Message\",\n        autoFocus: true,\n        onChange: e => setsend_msg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        disableElevation: true,\n        variant: \"contained\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => {\n            closeModal();\n          },\n          children: \"CLOSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 58\n          }, this),\n          onClick: () => {\n            SendMessage();\n          },\n          children: \"SEND\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this); //#endregion\n}\n\n_s(MakeChatting, \"ohJ/HW7pyViGEeNuntuhL9wohZE=\");\n\n_c = MakeChatting;\nexport default MakeChatting;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeChatting\");","map":{"version":3,"names":["React","useState","useEffect","Modal","io","LogText","ButtonGroup","Button","TextField","SendIcon","socket","MakeChatting","props","ENDPOINT","seller_name","buyer_name","modalIsOpen","setIsOpen","roommax","send_msg","setsend_msg","chat_log","setchat_log","Room_Number","setRoomNumber","openModal","alert","MakeRoom","closeModal","on","name","msg","length","emit","roomn","makeroom","roomnumber","result","i","push","RoomN","console","log","filter","x","includes","Msg","SendMessage","e","target","value"],"sources":["C:/Users/user/Desktop/2022/main/Front/client/src/component/ui/Make_Chatting.jsx"],"sourcesContent":["//#region react\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport io from \"socket.io-client\";\nimport LogText from \"./LogText\"\n//#endregion \n\n//#region mui\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport SendIcon from '@mui/icons-material/Send';\n//#endregion \n\n//#region 전역 변수\nlet socket;\n//#endregion\n\nfunction MakeChatting(props) {\n\n    const ENDPOINT = \"http://localhost:8080\";\n\n    const { seller_name, buyer_name } = props;\n\n    //#region useState\n    const [modalIsOpen, setIsOpen] = useState(false);\n    const [roommax] = useState([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n    const [send_msg, setsend_msg] = useState(\"\");\n    const [chat_log, setchat_log] = useState([{}]);\n    const [Room_Number, setRoomNumber] = useState();\n    //#endregion\n\n    //#region 함수가 실행될때 modal의 상태를 true로 바꿔준다.\n    function openModal() {\n        if (seller_name === buyer_name) {\n            alert(\"본인의 매물을 구매할 수 없습니다.\");\n        }\n        else {\n            setIsOpen(true);\n            MakeRoom();\n        }\n    }\n    //#endregion\n\n    //#region 함수가 실행될때 modal의 상태를 false로 바꿔준다.\n    function closeModal() {\n        setIsOpen(false);\n    }\n    //#endregion\n\n    //#region useEffect\n    useEffect(() => {\n        socket = io(ENDPOINT);\n    }, []);\n\n    useEffect(() => {\n        socket.on(\"Msg_return\", ({ buyer_name, send_msg }) => {\n            setchat_log([...chat_log, { name: buyer_name, msg: send_msg }]);\n        })\n        if(chat_log.length !== 0 && chat_log.length !== 1) {\n            socket.emit(\"Save_Msg\",({chat_log, Room_Number}));\n        }\n    }, [chat_log])\n    //#endregion\n\n    //#region 지역 변수\n    const roomn = [];\n    let makeroom = [];\n    let roomnumber = 0;\n    //#endregion\n\n    //#region 채팅방 생성\n    function MakeRoom() {\n\n        socket.emit(\"Room_Search\");\n\n        socket.on(\"Room_Search_Result\", (result) => {\n            for (let i = 0; i < result.length; i++) {\n                roomn.push(result[i].RoomN);\n            }\n\n            console.log(`res: ${result}`);\n\n            makeroom = roommax.filter(x => !roomn.includes(x));\n\n            if (makeroom.length === 10) {  //방이 없을때\n                roomnumber = makeroom[0];\n                setRoomNumber(makeroom[0]);\n                socket.emit(\"Room_Make\", { seller_name, buyer_name, roomnumber });\n                socket.on(\"Room_Make_Result\", () => {\n                    socket.emit(\"Chatting_Join\", { roomnumber });\n                });\n            }\n            else {  //방이 있을때                \n                for (let i = 0; i < result.length; i++) {\n                    if (result[i].seller_name === seller_name && result[i].buyer_name === buyer_name) {\n                        roomnumber = result[i].RoomN;\n                        console.log(result[i].Msg);          \n                        console.log(roomnumber);\n                        setRoomNumber(roomnumber);\n                        socket.emit(\"Chatting_Join\", { roomnumber });\n                        setchat_log(result[i].Msg);\n                        socket.emit(\"Load_Msg_Makechat\", { roomnumber });\n                        socket.on('Return_Load_Msg_Makechat', ({ result }) => {\n                            setchat_log(result);\n                        })\n                        break;\n                    }\n                    else if (i === result.length - 1) {\n                        console.log(\"방이없다\");\n                        roomnumber = makeroom[0];\n                        setRoomNumber(makeroom[0]);\n                        socket.emit(\"Room_Make\", { seller_name, buyer_name, roomnumber });\n                        socket.on(\"Room_Make_Result\", () => {\n                            socket.emit(\"Chatting_Join\", { roomnumber });\n                        })\n                    }\n                }\n            }\n        });\n    }\n    //#endregion\n\n    //#region 메세지 전달 함수\n    function SendMessage() {\n        socket.emit(\"Message_Send\", { buyer_name, send_msg, Room_Number });\n    }\n    //#endregion\n\n    //#region 렌더링\n    return (\n        <div>\n            <Button onClick={() => {\n                openModal()\n            }}>CHATTING</Button>\n            <Modal isOpen={modalIsOpen} ariaHideApp={false}>\n                <LogText log={chat_log} ></LogText>\n                <TextField\n                    margin='normal'\n                    required\n                    fullWidth\n                    id=\"Message\"\n                    label=\"Message\"\n                    name=\"Message\"\n                    autoComplete=\"Message\"\n                    autoFocus\n                    onChange={(e) => setsend_msg(e.target.value)}\n                />\n                <ButtonGroup disableElevation variant=\"contained\">\n                    <Button variant=\"contained\" onClick={() => { closeModal() }}>CLOSE</Button>\n                    <Button variant=\"contained\" endIcon={<SendIcon />} onClick={() => { SendMessage() }} >SEND</Button>\n                </ButtonGroup>\n            </Modal>\n        </div>\n    );\n    //#endregion\n}\n\nexport default MakeChatting;"],"mappings":"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"},"metadata":{},"sourceType":"module"}