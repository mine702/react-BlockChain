{"ast":null,"code":"class ConvertedRandomGenerator {\n  constructor(rng) {\n    this.rng = rng;\n\n    if (typeof this.rng.jump === 'function') {\n      this.jump = function jump() {\n        const out = this.jump();\n        return new ConvertedRandomGenerator(out);\n      };\n\n      this.unsafeJump = function unsafeJump() {\n        const out = this.jump();\n        this.rng = out;\n      };\n    }\n  }\n\n  min() {\n    return this.rng.min();\n  }\n\n  max() {\n    return this.rng.max();\n  }\n\n  clone() {\n    return new ConvertedRandomGenerator(this.rng);\n  }\n\n  next() {\n    const out = this.rng.next();\n    return [out[0], new ConvertedRandomGenerator(out[1])];\n  }\n\n  unsafeNext() {\n    const out = this.rng.next();\n    this.rng = out[1];\n    return out[0];\n  }\n\n}\n\nexport function convertToRandomGenerator(rng) {\n  if ('clone' in rng && 'unsafeNext' in rng) {\n    return rng;\n  }\n\n  return new ConvertedRandomGenerator(rng);\n}","map":{"version":3,"names":["ConvertedRandomGenerator","constructor","rng","jump","out","unsafeJump","min","max","clone","next","unsafeNext","convertToRandomGenerator"],"sources":["C:/Users/cyr50/OneDrive/바탕 화면/비트고급 프로젝트_tuffle/Front/client/node_modules/fast-check/lib/esm/random/generator/PureRandom.js"],"sourcesContent":["class ConvertedRandomGenerator {\n    constructor(rng) {\n        this.rng = rng;\n        if (typeof this.rng.jump === 'function') {\n            this.jump = function jump() {\n                const out = this.jump();\n                return new ConvertedRandomGenerator(out);\n            };\n            this.unsafeJump = function unsafeJump() {\n                const out = this.jump();\n                this.rng = out;\n            };\n        }\n    }\n    min() {\n        return this.rng.min();\n    }\n    max() {\n        return this.rng.max();\n    }\n    clone() {\n        return new ConvertedRandomGenerator(this.rng);\n    }\n    next() {\n        const out = this.rng.next();\n        return [out[0], new ConvertedRandomGenerator(out[1])];\n    }\n    unsafeNext() {\n        const out = this.rng.next();\n        this.rng = out[1];\n        return out[0];\n    }\n}\nexport function convertToRandomGenerator(rng) {\n    if ('clone' in rng && 'unsafeNext' in rng) {\n        return rng;\n    }\n    return new ConvertedRandomGenerator(rng);\n}\n"],"mappings":"AAAA,MAAMA,wBAAN,CAA+B;EAC3BC,WAAW,CAACC,GAAD,EAAM;IACb,KAAKA,GAAL,GAAWA,GAAX;;IACA,IAAI,OAAO,KAAKA,GAAL,CAASC,IAAhB,KAAyB,UAA7B,EAAyC;MACrC,KAAKA,IAAL,GAAY,SAASA,IAAT,GAAgB;QACxB,MAAMC,GAAG,GAAG,KAAKD,IAAL,EAAZ;QACA,OAAO,IAAIH,wBAAJ,CAA6BI,GAA7B,CAAP;MACH,CAHD;;MAIA,KAAKC,UAAL,GAAkB,SAASA,UAAT,GAAsB;QACpC,MAAMD,GAAG,GAAG,KAAKD,IAAL,EAAZ;QACA,KAAKD,GAAL,GAAWE,GAAX;MACH,CAHD;IAIH;EACJ;;EACDE,GAAG,GAAG;IACF,OAAO,KAAKJ,GAAL,CAASI,GAAT,EAAP;EACH;;EACDC,GAAG,GAAG;IACF,OAAO,KAAKL,GAAL,CAASK,GAAT,EAAP;EACH;;EACDC,KAAK,GAAG;IACJ,OAAO,IAAIR,wBAAJ,CAA6B,KAAKE,GAAlC,CAAP;EACH;;EACDO,IAAI,GAAG;IACH,MAAML,GAAG,GAAG,KAAKF,GAAL,CAASO,IAAT,EAAZ;IACA,OAAO,CAACL,GAAG,CAAC,CAAD,CAAJ,EAAS,IAAIJ,wBAAJ,CAA6BI,GAAG,CAAC,CAAD,CAAhC,CAAT,CAAP;EACH;;EACDM,UAAU,GAAG;IACT,MAAMN,GAAG,GAAG,KAAKF,GAAL,CAASO,IAAT,EAAZ;IACA,KAAKP,GAAL,GAAWE,GAAG,CAAC,CAAD,CAAd;IACA,OAAOA,GAAG,CAAC,CAAD,CAAV;EACH;;AA/B0B;;AAiC/B,OAAO,SAASO,wBAAT,CAAkCT,GAAlC,EAAuC;EAC1C,IAAI,WAAWA,GAAX,IAAkB,gBAAgBA,GAAtC,EAA2C;IACvC,OAAOA,GAAP;EACH;;EACD,OAAO,IAAIF,wBAAJ,CAA6BE,GAA7B,CAAP;AACH"},"metadata":{},"sourceType":"module"}