{"ast":null,"code":"import { Shrinkable } from './Shrinkable.js';\nexport class Arbitrary {\n  filter(refinement) {\n    return new FilterArbitrary(this, refinement);\n  }\n\n  map(mapper) {\n    return new MapArbitrary(this, mapper);\n  }\n\n  chain(fmapper) {\n    return new ChainArbitrary(this, fmapper);\n  }\n\n  noShrink() {\n    return new NoShrinkArbitrary(this);\n  }\n\n  withBias(_freq) {\n    return this;\n  }\n\n  noBias() {\n    return new NoBiasArbitrary(this);\n  }\n\n}\n\nclass ChainArbitrary extends Arbitrary {\n  constructor(arb, fmapper) {\n    super();\n    this.arb = arb;\n    this.fmapper = fmapper;\n  }\n\n  generate(mrng) {\n    const clonedMrng = mrng.clone();\n    const src = this.arb.generate(mrng);\n    const dst = this.fmapper(src.value).generate(mrng);\n    return ChainArbitrary.shrinkChain(clonedMrng, src, dst, this.fmapper);\n  }\n\n  withBias(freq) {\n    return this.arb.withBias(freq).chain(t => this.fmapper(t).withBias(freq));\n  }\n\n  static shrinkChain(mrng, src, dst, fmapper) {\n    return new Shrinkable(dst.value, () => src.shrink().map(v => ChainArbitrary.shrinkChain(mrng.clone(), v, fmapper(v.value).generate(mrng.clone()), fmapper)).join(dst.shrink()));\n  }\n\n}\n\nclass MapArbitrary extends Arbitrary {\n  constructor(arb, mapper) {\n    super();\n    this.arb = arb;\n    this.mapper = mapper;\n  }\n\n  generate(mrng) {\n    return this.arb.generate(mrng).map(this.mapper);\n  }\n\n  withBias(freq) {\n    return this.arb.withBias(freq).map(this.mapper);\n  }\n\n}\n\nclass FilterArbitrary extends Arbitrary {\n  constructor(arb, refinement) {\n    super();\n    this.arb = arb;\n    this.refinement = refinement;\n  }\n\n  generate(mrng) {\n    let g = this.arb.generate(mrng);\n\n    while (!this.refinementOnShrinkable(g)) {\n      g = this.arb.generate(mrng);\n    }\n\n    return g.filter(this.refinement);\n  }\n\n  withBias(freq) {\n    return this.arb.withBias(freq).filter(this.refinement);\n  }\n\n  refinementOnShrinkable(s) {\n    return this.refinement(s.value);\n  }\n\n}\n\nclass NoShrinkArbitrary extends Arbitrary {\n  constructor(arb) {\n    super();\n    this.arb = arb;\n  }\n\n  generate(mrng) {\n    return new Shrinkable(this.arb.generate(mrng).value);\n  }\n\n  withBias(freq) {\n    return this.arb.withBias(freq).noShrink();\n  }\n\n}\n\nclass NoBiasArbitrary extends Arbitrary {\n  constructor(arb) {\n    super();\n    this.arb = arb;\n  }\n\n  generate(mrng) {\n    return this.arb.generate(mrng);\n  }\n\n}\n\nexport function assertIsArbitrary(instance) {\n  if (typeof instance !== 'object' || instance === null || !('generate' in instance)) {\n    throw new Error('Unexpected value received: not an instance of Arbitrary');\n  }\n}","map":{"version":3,"names":["Shrinkable","Arbitrary","filter","refinement","FilterArbitrary","map","mapper","MapArbitrary","chain","fmapper","ChainArbitrary","noShrink","NoShrinkArbitrary","withBias","_freq","noBias","NoBiasArbitrary","constructor","arb","generate","mrng","clonedMrng","clone","src","dst","value","shrinkChain","freq","t","shrink","v","join","g","refinementOnShrinkable","s","assertIsArbitrary","instance","Error"],"sources":["C:/Users/cyr50/OneDrive/바탕 화면/비트고급 프로젝트_tuffle/Front/client/node_modules/fast-check/lib/esm/check/arbitrary/definition/Arbitrary.js"],"sourcesContent":["import { Shrinkable } from './Shrinkable.js';\nexport class Arbitrary {\n    filter(refinement) {\n        return new FilterArbitrary(this, refinement);\n    }\n    map(mapper) {\n        return new MapArbitrary(this, mapper);\n    }\n    chain(fmapper) {\n        return new ChainArbitrary(this, fmapper);\n    }\n    noShrink() {\n        return new NoShrinkArbitrary(this);\n    }\n    withBias(_freq) {\n        return this;\n    }\n    noBias() {\n        return new NoBiasArbitrary(this);\n    }\n}\nclass ChainArbitrary extends Arbitrary {\n    constructor(arb, fmapper) {\n        super();\n        this.arb = arb;\n        this.fmapper = fmapper;\n    }\n    generate(mrng) {\n        const clonedMrng = mrng.clone();\n        const src = this.arb.generate(mrng);\n        const dst = this.fmapper(src.value).generate(mrng);\n        return ChainArbitrary.shrinkChain(clonedMrng, src, dst, this.fmapper);\n    }\n    withBias(freq) {\n        return this.arb.withBias(freq).chain((t) => this.fmapper(t).withBias(freq));\n    }\n    static shrinkChain(mrng, src, dst, fmapper) {\n        return new Shrinkable(dst.value, () => src\n            .shrink()\n            .map((v) => ChainArbitrary.shrinkChain(mrng.clone(), v, fmapper(v.value).generate(mrng.clone()), fmapper))\n            .join(dst.shrink()));\n    }\n}\nclass MapArbitrary extends Arbitrary {\n    constructor(arb, mapper) {\n        super();\n        this.arb = arb;\n        this.mapper = mapper;\n    }\n    generate(mrng) {\n        return this.arb.generate(mrng).map(this.mapper);\n    }\n    withBias(freq) {\n        return this.arb.withBias(freq).map(this.mapper);\n    }\n}\nclass FilterArbitrary extends Arbitrary {\n    constructor(arb, refinement) {\n        super();\n        this.arb = arb;\n        this.refinement = refinement;\n    }\n    generate(mrng) {\n        let g = this.arb.generate(mrng);\n        while (!this.refinementOnShrinkable(g)) {\n            g = this.arb.generate(mrng);\n        }\n        return g.filter(this.refinement);\n    }\n    withBias(freq) {\n        return this.arb.withBias(freq).filter(this.refinement);\n    }\n    refinementOnShrinkable(s) {\n        return this.refinement(s.value);\n    }\n}\nclass NoShrinkArbitrary extends Arbitrary {\n    constructor(arb) {\n        super();\n        this.arb = arb;\n    }\n    generate(mrng) {\n        return new Shrinkable(this.arb.generate(mrng).value);\n    }\n    withBias(freq) {\n        return this.arb.withBias(freq).noShrink();\n    }\n}\nclass NoBiasArbitrary extends Arbitrary {\n    constructor(arb) {\n        super();\n        this.arb = arb;\n    }\n    generate(mrng) {\n        return this.arb.generate(mrng);\n    }\n}\nexport function assertIsArbitrary(instance) {\n    if (typeof instance !== 'object' || instance === null || !('generate' in instance)) {\n        throw new Error('Unexpected value received: not an instance of Arbitrary');\n    }\n}\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,iBAA3B;AACA,OAAO,MAAMC,SAAN,CAAgB;EACnBC,MAAM,CAACC,UAAD,EAAa;IACf,OAAO,IAAIC,eAAJ,CAAoB,IAApB,EAA0BD,UAA1B,CAAP;EACH;;EACDE,GAAG,CAACC,MAAD,EAAS;IACR,OAAO,IAAIC,YAAJ,CAAiB,IAAjB,EAAuBD,MAAvB,CAAP;EACH;;EACDE,KAAK,CAACC,OAAD,EAAU;IACX,OAAO,IAAIC,cAAJ,CAAmB,IAAnB,EAAyBD,OAAzB,CAAP;EACH;;EACDE,QAAQ,GAAG;IACP,OAAO,IAAIC,iBAAJ,CAAsB,IAAtB,CAAP;EACH;;EACDC,QAAQ,CAACC,KAAD,EAAQ;IACZ,OAAO,IAAP;EACH;;EACDC,MAAM,GAAG;IACL,OAAO,IAAIC,eAAJ,CAAoB,IAApB,CAAP;EACH;;AAlBkB;;AAoBvB,MAAMN,cAAN,SAA6BT,SAA7B,CAAuC;EACnCgB,WAAW,CAACC,GAAD,EAAMT,OAAN,EAAe;IACtB;IACA,KAAKS,GAAL,GAAWA,GAAX;IACA,KAAKT,OAAL,GAAeA,OAAf;EACH;;EACDU,QAAQ,CAACC,IAAD,EAAO;IACX,MAAMC,UAAU,GAAGD,IAAI,CAACE,KAAL,EAAnB;IACA,MAAMC,GAAG,GAAG,KAAKL,GAAL,CAASC,QAAT,CAAkBC,IAAlB,CAAZ;IACA,MAAMI,GAAG,GAAG,KAAKf,OAAL,CAAac,GAAG,CAACE,KAAjB,EAAwBN,QAAxB,CAAiCC,IAAjC,CAAZ;IACA,OAAOV,cAAc,CAACgB,WAAf,CAA2BL,UAA3B,EAAuCE,GAAvC,EAA4CC,GAA5C,EAAiD,KAAKf,OAAtD,CAAP;EACH;;EACDI,QAAQ,CAACc,IAAD,EAAO;IACX,OAAO,KAAKT,GAAL,CAASL,QAAT,CAAkBc,IAAlB,EAAwBnB,KAAxB,CAA+BoB,CAAD,IAAO,KAAKnB,OAAL,CAAamB,CAAb,EAAgBf,QAAhB,CAAyBc,IAAzB,CAArC,CAAP;EACH;;EACiB,OAAXD,WAAW,CAACN,IAAD,EAAOG,GAAP,EAAYC,GAAZ,EAAiBf,OAAjB,EAA0B;IACxC,OAAO,IAAIT,UAAJ,CAAewB,GAAG,CAACC,KAAnB,EAA0B,MAAMF,GAAG,CACrCM,MADkC,GAElCxB,GAFkC,CAE7ByB,CAAD,IAAOpB,cAAc,CAACgB,WAAf,CAA2BN,IAAI,CAACE,KAAL,EAA3B,EAAyCQ,CAAzC,EAA4CrB,OAAO,CAACqB,CAAC,CAACL,KAAH,CAAP,CAAiBN,QAAjB,CAA0BC,IAAI,CAACE,KAAL,EAA1B,CAA5C,EAAqFb,OAArF,CAFuB,EAGlCsB,IAHkC,CAG7BP,GAAG,CAACK,MAAJ,EAH6B,CAAhC,CAAP;EAIH;;AApBkC;;AAsBvC,MAAMtB,YAAN,SAA2BN,SAA3B,CAAqC;EACjCgB,WAAW,CAACC,GAAD,EAAMZ,MAAN,EAAc;IACrB;IACA,KAAKY,GAAL,GAAWA,GAAX;IACA,KAAKZ,MAAL,GAAcA,MAAd;EACH;;EACDa,QAAQ,CAACC,IAAD,EAAO;IACX,OAAO,KAAKF,GAAL,CAASC,QAAT,CAAkBC,IAAlB,EAAwBf,GAAxB,CAA4B,KAAKC,MAAjC,CAAP;EACH;;EACDO,QAAQ,CAACc,IAAD,EAAO;IACX,OAAO,KAAKT,GAAL,CAASL,QAAT,CAAkBc,IAAlB,EAAwBtB,GAAxB,CAA4B,KAAKC,MAAjC,CAAP;EACH;;AAXgC;;AAarC,MAAMF,eAAN,SAA8BH,SAA9B,CAAwC;EACpCgB,WAAW,CAACC,GAAD,EAAMf,UAAN,EAAkB;IACzB;IACA,KAAKe,GAAL,GAAWA,GAAX;IACA,KAAKf,UAAL,GAAkBA,UAAlB;EACH;;EACDgB,QAAQ,CAACC,IAAD,EAAO;IACX,IAAIY,CAAC,GAAG,KAAKd,GAAL,CAASC,QAAT,CAAkBC,IAAlB,CAAR;;IACA,OAAO,CAAC,KAAKa,sBAAL,CAA4BD,CAA5B,CAAR,EAAwC;MACpCA,CAAC,GAAG,KAAKd,GAAL,CAASC,QAAT,CAAkBC,IAAlB,CAAJ;IACH;;IACD,OAAOY,CAAC,CAAC9B,MAAF,CAAS,KAAKC,UAAd,CAAP;EACH;;EACDU,QAAQ,CAACc,IAAD,EAAO;IACX,OAAO,KAAKT,GAAL,CAASL,QAAT,CAAkBc,IAAlB,EAAwBzB,MAAxB,CAA+B,KAAKC,UAApC,CAAP;EACH;;EACD8B,sBAAsB,CAACC,CAAD,EAAI;IACtB,OAAO,KAAK/B,UAAL,CAAgB+B,CAAC,CAACT,KAAlB,CAAP;EACH;;AAlBmC;;AAoBxC,MAAMb,iBAAN,SAAgCX,SAAhC,CAA0C;EACtCgB,WAAW,CAACC,GAAD,EAAM;IACb;IACA,KAAKA,GAAL,GAAWA,GAAX;EACH;;EACDC,QAAQ,CAACC,IAAD,EAAO;IACX,OAAO,IAAIpB,UAAJ,CAAe,KAAKkB,GAAL,CAASC,QAAT,CAAkBC,IAAlB,EAAwBK,KAAvC,CAAP;EACH;;EACDZ,QAAQ,CAACc,IAAD,EAAO;IACX,OAAO,KAAKT,GAAL,CAASL,QAAT,CAAkBc,IAAlB,EAAwBhB,QAAxB,EAAP;EACH;;AAVqC;;AAY1C,MAAMK,eAAN,SAA8Bf,SAA9B,CAAwC;EACpCgB,WAAW,CAACC,GAAD,EAAM;IACb;IACA,KAAKA,GAAL,GAAWA,GAAX;EACH;;EACDC,QAAQ,CAACC,IAAD,EAAO;IACX,OAAO,KAAKF,GAAL,CAASC,QAAT,CAAkBC,IAAlB,CAAP;EACH;;AAPmC;;AASxC,OAAO,SAASe,iBAAT,CAA2BC,QAA3B,EAAqC;EACxC,IAAI,OAAOA,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,KAAK,IAA7C,IAAqD,EAAE,cAAcA,QAAhB,CAAzD,EAAoF;IAChF,MAAM,IAAIC,KAAJ,CAAU,yDAAV,CAAN;EACH;AACJ"},"metadata":{},"sourceType":"module"}