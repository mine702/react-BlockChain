{"ast":null,"code":"import { convertFromNext, convertToNext } from '../../../check/arbitrary/definition/Converters.js';\nimport { option } from '../../option.js';\nimport { tuple } from '../../tuple.js';\nimport { extractEnumerableKeys } from '../helpers/EnumerableKeysExtractor.js';\nimport { buildValuesAndSeparateKeysToObjectMapper, buildValuesAndSeparateKeysToObjectUnmapper } from '../mappers/ValuesAndSeparateKeysToObject.js';\nconst noKeyValue = Symbol('no-key');\nexport function buildPartialRecordArbitrary(recordModel, requiredKeys) {\n  const keys = extractEnumerableKeys(recordModel);\n  const arbs = [];\n\n  for (let index = 0; index !== keys.length; ++index) {\n    const k = keys[index];\n    const requiredArbitrary = recordModel[k];\n    if (requiredKeys === undefined || requiredKeys.indexOf(k) !== -1) arbs.push(requiredArbitrary);else arbs.push(option(requiredArbitrary, {\n      nil: noKeyValue\n    }));\n  }\n\n  return convertFromNext(convertToNext(tuple(...arbs)).map(buildValuesAndSeparateKeysToObjectMapper(keys, noKeyValue), buildValuesAndSeparateKeysToObjectUnmapper(keys, noKeyValue)));\n}","map":{"version":3,"names":["convertFromNext","convertToNext","option","tuple","extractEnumerableKeys","buildValuesAndSeparateKeysToObjectMapper","buildValuesAndSeparateKeysToObjectUnmapper","noKeyValue","Symbol","buildPartialRecordArbitrary","recordModel","requiredKeys","keys","arbs","index","length","k","requiredArbitrary","undefined","indexOf","push","nil","map"],"sources":["C:/Users/cyr50/OneDrive/바탕 화면/비트고급 프로젝트_tuffle/Front/client/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/PartialRecordArbitraryBuilder.js"],"sourcesContent":["import { convertFromNext, convertToNext } from '../../../check/arbitrary/definition/Converters.js';\nimport { option } from '../../option.js';\nimport { tuple } from '../../tuple.js';\nimport { extractEnumerableKeys } from '../helpers/EnumerableKeysExtractor.js';\nimport { buildValuesAndSeparateKeysToObjectMapper, buildValuesAndSeparateKeysToObjectUnmapper, } from '../mappers/ValuesAndSeparateKeysToObject.js';\nconst noKeyValue = Symbol('no-key');\nexport function buildPartialRecordArbitrary(recordModel, requiredKeys) {\n    const keys = extractEnumerableKeys(recordModel);\n    const arbs = [];\n    for (let index = 0; index !== keys.length; ++index) {\n        const k = keys[index];\n        const requiredArbitrary = recordModel[k];\n        if (requiredKeys === undefined || requiredKeys.indexOf(k) !== -1)\n            arbs.push(requiredArbitrary);\n        else\n            arbs.push(option(requiredArbitrary, { nil: noKeyValue }));\n    }\n    return convertFromNext(convertToNext(tuple(...arbs)).map(buildValuesAndSeparateKeysToObjectMapper(keys, noKeyValue), buildValuesAndSeparateKeysToObjectUnmapper(keys, noKeyValue)));\n}\n"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,aAA1B,QAA+C,mDAA/C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,qBAAT,QAAsC,uCAAtC;AACA,SAASC,wCAAT,EAAmDC,0CAAnD,QAAsG,6CAAtG;AACA,MAAMC,UAAU,GAAGC,MAAM,CAAC,QAAD,CAAzB;AACA,OAAO,SAASC,2BAAT,CAAqCC,WAArC,EAAkDC,YAAlD,EAAgE;EACnE,MAAMC,IAAI,GAAGR,qBAAqB,CAACM,WAAD,CAAlC;EACA,MAAMG,IAAI,GAAG,EAAb;;EACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,KAAKF,IAAI,CAACG,MAAnC,EAA2C,EAAED,KAA7C,EAAoD;IAChD,MAAME,CAAC,GAAGJ,IAAI,CAACE,KAAD,CAAd;IACA,MAAMG,iBAAiB,GAAGP,WAAW,CAACM,CAAD,CAArC;IACA,IAAIL,YAAY,KAAKO,SAAjB,IAA8BP,YAAY,CAACQ,OAAb,CAAqBH,CAArB,MAA4B,CAAC,CAA/D,EACIH,IAAI,CAACO,IAAL,CAAUH,iBAAV,EADJ,KAGIJ,IAAI,CAACO,IAAL,CAAUlB,MAAM,CAACe,iBAAD,EAAoB;MAAEI,GAAG,EAAEd;IAAP,CAApB,CAAhB;EACP;;EACD,OAAOP,eAAe,CAACC,aAAa,CAACE,KAAK,CAAC,GAAGU,IAAJ,CAAN,CAAb,CAA8BS,GAA9B,CAAkCjB,wCAAwC,CAACO,IAAD,EAAOL,UAAP,CAA1E,EAA8FD,0CAA0C,CAACM,IAAD,EAAOL,UAAP,CAAxI,CAAD,CAAtB;AACH"},"metadata":{},"sourceType":"module"}