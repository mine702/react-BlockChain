{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.functionExternalCases = void 0;\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst debug = debug_1.default(\"codec:wrap:function\");\n\nconst dispatch_1 = require(\"./dispatch\");\n\nconst errors_1 = require(\"./errors\");\n\nconst Messages = __importStar(require(\"./messages\"));\n\nconst Utils = __importStar(require(\"./utils\"));\n\nconst EvmUtils = __importStar(require(\"../evm/utils\"));\n\nconst web3_utils_1 = __importDefault(require(\"web3-utils\"));\n\nconst address_1 = require(\"./address\");\n\nconst bytes_1 = require(\"./bytes\");\n\nconst functionExternalCasesBasic = [functionFromFunctionExternalInput, functionFromHexString, functionFromCodecFunctionExternalValue, functionFailureCase];\nexports.functionExternalCases = [functionFromTypeValueInput, ...functionExternalCasesBasic];\n\nfunction* functionFromFunctionExternalInput(dataType, input, wrapOptions) {\n  if (!Utils.isFunctionExternalInput(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not an object with address & selector\");\n  }\n\n  const wrappedAddress = yield* dispatch_1.wrapWithCases({\n    typeClass: \"address\",\n    kind: \"general\"\n  }, input.address, Object.assign(Object.assign({}, wrapOptions), {\n    name: `${wrapOptions.name}.address`,\n    specificityFloor: 5\n  }), address_1.addressCases);\n  const address = wrappedAddress.value.asAddress;\n  const wrappedSelector = yield* dispatch_1.wrapWithCases({\n    typeClass: \"bytes\",\n    kind: \"static\",\n    length: 4\n  }, input.selector, Object.assign(Object.assign({}, wrapOptions), {\n    name: `${wrapOptions.name}.selector`,\n    specificityFloor: 5\n  }), bytes_1.bytesCases);\n  const selector = wrappedSelector.value.asHex; //note validation & normalization have already been performed\n\n  return {\n    type: dataType,\n    kind: \"value\",\n    value: {\n      kind: \"unknown\",\n      contract: {\n        kind: \"unknown\",\n        address\n      },\n      selector\n    }\n  };\n}\n\nfunction* functionFromCodecFunctionExternalValue(dataType, input, wrapOptions) {\n  if (!Utils.isWrappedResult(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a wrapped result\");\n  }\n\n  if (input.type.typeClass !== \"function\" || input.type.visibility !== \"external\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrappedTypeMessage(input.type));\n  }\n\n  if (input.kind !== \"value\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.errorResultMessage);\n  }\n\n  const coercedInput = input;\n  const address = coercedInput.value.contract.address;\n  const selector = coercedInput.value.selector; //we can skip validation & normalization here\n\n  return {\n    type: dataType,\n    kind: \"value\",\n    value: {\n      kind: \"unknown\",\n      contract: {\n        kind: \"unknown\",\n        address\n      },\n      selector\n    }\n  };\n}\n\nfunction* functionFromHexString(dataType, input, wrapOptions) {\n  if (typeof input !== \"string\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a string\");\n  }\n\n  if (!Utils.isByteString(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, \"Input was a string, but not a valid even-length hex string\");\n  }\n\n  if (input.length !== 2 + 2 * (EvmUtils.ADDRESS_SIZE + EvmUtils.SELECTOR_SIZE)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.wrongLengthMessage(\"external function was given as a string but\", EvmUtils.ADDRESS_SIZE + EvmUtils.SELECTOR_SIZE, (input.length - 2) / 2));\n  }\n\n  let address = input.slice(0, EvmUtils.ADDRESS_SIZE * 2 + 2).toLowerCase();\n  const selector = \"0x\" + input.slice(EvmUtils.ADDRESS_SIZE * 2 + 2).toLowerCase(); //address & selector must now have the correct length, and we are deliberately *not*\n  //checking the checksum on address in this case.  So, the only thing remaining\n  //to do is to normalize address.\n\n  address = web3_utils_1.default.toChecksumAddress(address); //...and return\n\n  return {\n    type: dataType,\n    kind: \"value\",\n    value: {\n      kind: \"unknown\",\n      contract: {\n        kind: \"unknown\",\n        address\n      },\n      selector\n    }\n  };\n}\n\nfunction* functionFromTypeValueInput(dataType, input, wrapOptions) {\n  if (!Utils.isTypeValueInput(input)) {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 1, \"Input was not a type/value pair\");\n  }\n\n  if (input.type !== \"function\") {\n    throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 5, Messages.specifiedTypeMessage(input.type));\n  } //extract value & try again, with loose option turned on\n\n\n  return yield* dispatch_1.wrapWithCases(dataType, input.value, Object.assign(Object.assign({}, wrapOptions), {\n    loose: true\n  }), functionExternalCasesBasic);\n}\n\nfunction* functionFailureCase(dataType, input, wrapOptions) {\n  throw new errors_1.TypeMismatchError(dataType, input, wrapOptions.name, 2, \"Input should be one of: an object with address and selector; a 24-byte hex string; a type/value pair; or a wrapped external function\");\n}","map":{"version":3,"mappings":"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","names":["debug","debug_1","functionExternalCasesBasic","functionFromFunctionExternalInput","functionFromHexString","functionFromCodecFunctionExternalValue","functionFailureCase","exports","functionFromTypeValueInput","dataType","input","wrapOptions","Utils","isFunctionExternalInput","errors_1","name","wrappedAddress","dispatch_1","typeClass","kind","address","Object","specificityFloor","address_1","value","asAddress","wrappedSelector","length","selector","bytes_1","asHex","type","contract","isWrappedResult","visibility","Messages","wrappedTypeMessage","errorResultMessage","coercedInput","isByteString","EvmUtils","ADDRESS_SIZE","SELECTOR_SIZE","wrongLengthMessage","slice","toLowerCase","web3_utils_1","toChecksumAddress","isTypeValueInput","specifiedTypeMessage","loose"],"sourceRoot":"","sources":["../../../lib/wrap/function.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}