{"ast":null,"code":"import { convertFromNext, convertToNext } from '../../../check/arbitrary/definition/Converters.js';\nimport { webSegment } from '../../webSegment.js';\nimport { array } from '../../array.js';\nimport { segmentsToPathMapper, segmentsToPathUnmapper } from '../mappers/SegmentsToPath.js';\n\nfunction sqrtSize(size) {\n  switch (size) {\n    case 'xsmall':\n      return ['xsmall', 'xsmall'];\n\n    case 'small':\n      return ['small', 'xsmall'];\n\n    case 'medium':\n      return ['small', 'small'];\n\n    case 'large':\n      return ['medium', 'small'];\n\n    case 'xlarge':\n      return ['medium', 'medium'];\n  }\n}\n\nexport function buildUriPathArbitrary(resolvedSize) {\n  const [segmentSize, numSegmentSize] = sqrtSize(resolvedSize);\n  return convertFromNext(convertToNext(array(webSegment({\n    size: segmentSize\n  }), {\n    size: numSegmentSize\n  })).map(segmentsToPathMapper, segmentsToPathUnmapper));\n}","map":{"version":3,"names":["convertFromNext","convertToNext","webSegment","array","segmentsToPathMapper","segmentsToPathUnmapper","sqrtSize","size","buildUriPathArbitrary","resolvedSize","segmentSize","numSegmentSize","map"],"sources":["C:/Users/cyr50/OneDrive/바탕 화면/비트고급 프로젝트_tuffle/Front/client/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/UriPathArbitraryBuilder.js"],"sourcesContent":["import { convertFromNext, convertToNext } from '../../../check/arbitrary/definition/Converters.js';\nimport { webSegment } from '../../webSegment.js';\nimport { array } from '../../array.js';\nimport { segmentsToPathMapper, segmentsToPathUnmapper } from '../mappers/SegmentsToPath.js';\nfunction sqrtSize(size) {\n    switch (size) {\n        case 'xsmall':\n            return ['xsmall', 'xsmall'];\n        case 'small':\n            return ['small', 'xsmall'];\n        case 'medium':\n            return ['small', 'small'];\n        case 'large':\n            return ['medium', 'small'];\n        case 'xlarge':\n            return ['medium', 'medium'];\n    }\n}\nexport function buildUriPathArbitrary(resolvedSize) {\n    const [segmentSize, numSegmentSize] = sqrtSize(resolvedSize);\n    return convertFromNext(convertToNext(array(webSegment({ size: segmentSize }), { size: numSegmentSize })).map(segmentsToPathMapper, segmentsToPathUnmapper));\n}\n"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,aAA1B,QAA+C,mDAA/C;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,oBAAT,EAA+BC,sBAA/B,QAA6D,8BAA7D;;AACA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;EACpB,QAAQA,IAAR;IACI,KAAK,QAAL;MACI,OAAO,CAAC,QAAD,EAAW,QAAX,CAAP;;IACJ,KAAK,OAAL;MACI,OAAO,CAAC,OAAD,EAAU,QAAV,CAAP;;IACJ,KAAK,QAAL;MACI,OAAO,CAAC,OAAD,EAAU,OAAV,CAAP;;IACJ,KAAK,OAAL;MACI,OAAO,CAAC,QAAD,EAAW,OAAX,CAAP;;IACJ,KAAK,QAAL;MACI,OAAO,CAAC,QAAD,EAAW,QAAX,CAAP;EAVR;AAYH;;AACD,OAAO,SAASC,qBAAT,CAA+BC,YAA/B,EAA6C;EAChD,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAACG,YAAD,CAA9C;EACA,OAAOT,eAAe,CAACC,aAAa,CAACE,KAAK,CAACD,UAAU,CAAC;IAAEK,IAAI,EAAEG;EAAR,CAAD,CAAX,EAAoC;IAAEH,IAAI,EAAEI;EAAR,CAApC,CAAN,CAAb,CAAkFC,GAAlF,CAAsFR,oBAAtF,EAA4GC,sBAA5G,CAAD,CAAtB;AACH"},"metadata":{},"sourceType":"module"}