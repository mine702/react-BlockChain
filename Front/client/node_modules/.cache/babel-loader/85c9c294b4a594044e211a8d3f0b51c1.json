{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\2022\\\\main\\\\Front\\\\client\\\\src\\\\component\\\\page\\\\registration\\\\HouseInfoInsert.jsx\",\n    _s = $RefreshSig$();\n\n//#region react\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from \"react-router\";\nimport io from \"socket.io-client\"; //#endregion\n//#region mui\n\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport images1 from '../../images/house.jpg';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem'; //#endregion\n//#region 라이브러리\n\nimport axios from 'axios';\nimport FormData from 'form-data';\nimport Web3 from 'web3'; //#endregion\n\nimport NFT from \"../../../contracts/NFT.json\"; //#region 전역 변수\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nlet NFT_Hash;\nlet web3;\nlet NFT_instance; //#endregion\n\nfunction HouseInfo_insert() {\n  _s();\n\n  const ENDPOINT = \"http://localhost:8080\";\n  const navigate = useNavigate();\n  const location = useLocation(); //#region uesState 변수\n\n  const [selluserId] = useState(location.state[0].id);\n  const [sellusername] = useState(location.state[0].name);\n  const [sellusernumber] = useState(location.state[0].number);\n  const [sellerMetaAddress] = useState(location.state[0].MetaMaskAcc);\n  const [area, setArea] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [agree, setAgree] = useState(false);\n  const [price, setPrice] = useState();\n  const [files, setFiles] = useState(images1);\n  const [file, setFile] = useState();\n  const [accounts, setAccounts] = useState(\"\"); //#endregion\n  //#region useEffect\n\n  useEffect(() => {\n    async function load() {\n      web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');\n      setAccounts(await web3.eth.getAccounts());\n      const networkId = await web3.eth.net.getId();\n      const NFTNetwork = NFT.networks[networkId];\n      NFT_instance = new web3.eth.Contract(NFT.abi, NFTNetwork.address);\n      console.log(NFT_instance);\n    }\n\n    load();\n  }, []);\n  useEffect(() => {\n    socket = io(ENDPOINT);\n  }, []); //#endregion\n  //#region 이미지 업로드\n\n  const handleFile = async fileToHandle => {\n    console.log('starting');\n    const formData = new FormData();\n    formData.append(\"file\", fileToHandle);\n    const filename = fileToHandle.name; //파일 이름.확장자\n\n    const filenameStr = filename.split('.'); //파일이름\n\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`; //파일 올리는 URL\n\n    const response = await axios.post(url, formData, {\n      maxContentLength: \"Infinity\",\n      headers: {\n        'Content-Type': `multipart/form-data;boundary=${formData._boundary}`,\n        'pinata_api_key': '97f3182c5eaaa5c01af0',\n        'pinata_secret_api_key': '23a31aa6f14b878f66c3f3b4f639f03e8619b1851e872d99793680db7550ae7b'\n      }\n    });\n    console.log(response);\n    Make_Json(filenameStr[0], response.data.IpfsHash); //response.data.IpfsHash : 매물 해시값\n  }; //#endregion\n  //#region 제이슨 파일 업로드\n\n\n  const Make_Json = async (filenameStr, img_cid) => {\n    //#region JSON 변환\n    var data = JSON.stringify({\n      \"pinataOptions\": {\n        \"cidVersion\": 1\n      },\n      \"pinataMetadata\": {\n        \"name\": `${filenameStr}.json`,\n        \"Address\": \"우송대학교\",\n        \"Price\": \"1\",\n        \"keyvalues\": {\n          \"customKey\": \"customValue\",\n          \"customKey2\": \"customValue2\"\n        }\n      },\n      \"pinataContent\": {\n        \"img\": `ipfs://${img_cid}`,\n        \"description\": \"위베어베어스\"\n      }\n    }); //#endregion\n\n    var config = {\n      method: 'post',\n      url: 'https://api.pinata.cloud/pinning/pinJSONToIPFS',\n      //JSON 올리는 URL\n      headers: {\n        'Content-Type': 'application/json',\n        'pinata_api_key': '97f3182c5eaaa5c01af0',\n        'pinata_secret_api_key': '23a31aa6f14b878f66c3f3b4f639f03e8619b1851e872d99793680db7550ae7b'\n      },\n      data: data\n    };\n    const res = await axios(config);\n    console.log(res.data);\n    NFT_Hash = res.data.IpfsHash; //JSON 해쉬 값\n  }; //#endregion\n  //#region 이미지 인코딩\n\n\n  const encodeFileToBase64 = fileBlob => {\n    const reader = new FileReader();\n    reader.readAsDataURL(fileBlob);\n    return new Promise(resolve => {\n      reader.onload = () => {\n        setFiles(reader.result);\n        resolve();\n      };\n    });\n  }; //#endregion\n  //#region 매물등록\n\n\n  async function House_register() {\n    if (agree === false) {\n      alert(\"개인정보 동의를 하세요\");\n    } else if (area === \"\" || address === \"\") {\n      alert(\"입력하지 않은 정보가 있습니다\");\n    } else if (NFT_Hash === undefined || NFT_Hash === null || NFT_Hash === \"\") {\n      alert(\"잠시만 기달려주세요\");\n    } else {\n      console.log(NFT_Hash);\n      const resl = await NFT_instance.methods.mintNFT(accounts[0], `ipfs://${NFT_Hash}`).send({\n        from: accounts[0],\n        gas: 5000000\n      });\n      const res = resl.events.Transfer.returnValues.tokenId;\n      socket.emit(\"House_Register\", {\n        area,\n        address,\n        price,\n        files,\n        selluserId,\n        sellusername,\n        sellusernumber,\n        sellerMetaAddress,\n        NFT_Hash,\n        res\n      });\n      alert(\"등록 완료!\");\n      navigate(\"/post-MainPage\", {\n        state: location.state\n      });\n    }\n  } //#endregion\n  //#region 동의여부\n\n\n  function CheckBoxBool() {\n    if (agree === false) {\n      setAgree(true);\n    } else if (agree === true) {\n      setAgree(false);\n    }\n  } //#endregion\n  //#region 렌더링\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"sm\",\n    sx: {\n      mb: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"outlined\",\n      sx: {\n        my: {\n          xs: 3,\n          md: 6\n        },\n        p: {\n          xs: 2,\n          md: 3\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h4\",\n        align: \"center\",\n        children: \"\\uD310\\uB9E4 \\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"\\uC9D1 \\uC815\\uBCF4 \\uB4F1\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  minWidth: 200\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"demo-simple-select-label\",\n                    children: \"\\uC9C0\\uC5ED\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"demo-simple-select-label\",\n                    id: \"demo-simple-select\",\n                    label: \"locationv\",\n                    value: area,\n                    onChange: e => setArea(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"대전\",\n                      children: \"\\uB300\\uC804\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"서울\",\n                      children: \"\\uC11C\\uC6B8\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                id: \"houseAddress\",\n                label: \"\\uC9D1\\uC8FC\\uC18C\",\n                fullWidth: true,\n                variant: \"standard\",\n                onChange: e => {\n                  setAddress(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                id: \"houseprice\",\n                label: \"\\uAC00\\uACA9 (ETH)\",\n                fullWidth: true,\n                variant: \"standard\",\n                onChange: e => {\n                  setPrice(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  height: '100%',\n                  display: 'flex'\n                },\n                children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                  component: \"img\",\n                  sx: {\n                    // 16:9\n                    pt: '5%'\n                  },\n                  image: files,\n                  alt: \"random\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                component: \"label\",\n                children: [\"\\uC0AC\\uC9C4\\uC62C\\uB9AC\\uAE30\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  hidden: true,\n                  onChange: e => {\n                    encodeFileToBase64(e.target.files[0]);\n                    setFile(e.target.files[0]);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => handleFile(file),\n                children: \"IPFS\\uB4F1\\uB85D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  color: \"secondary\",\n                  onClick: CheckBoxBool\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 28\n                }, this),\n                label: \"\\uD310\\uB9E4 \\uAC8C\\uC2DC\\uAE00\\uC5D0 \\uC62C\\uB9AC\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'flex-end'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              ml: 1\n            },\n            onClick: House_register,\n            children: \"\\uB4F1\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this); //#endregion\n}\n\n_s(HouseInfo_insert, \"Zp75DqzhksYEy31fdXGgQPWrbAY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = HouseInfo_insert;\nexport default HouseInfo_insert;\n\nvar _c;\n\n$RefreshReg$(_c, \"HouseInfo_insert\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","io","Box","Container","Paper","Button","Typography","Grid","TextField","FormControlLabel","Checkbox","Card","CardMedia","images1","FormControl","InputLabel","Select","MenuItem","axios","FormData","Web3","NFT","socket","NFT_Hash","web3","NFT_instance","HouseInfo_insert","ENDPOINT","navigate","location","selluserId","state","id","sellusername","name","sellusernumber","number","sellerMetaAddress","MetaMaskAcc","area","setArea","address","setAddress","agree","setAgree","price","setPrice","files","setFiles","file","setFile","accounts","setAccounts","load","givenProvider","eth","getAccounts","networkId","net","getId","NFTNetwork","networks","Contract","abi","console","log","handleFile","fileToHandle","formData","append","filename","filenameStr","split","url","response","post","maxContentLength","headers","_boundary","Make_Json","data","IpfsHash","img_cid","JSON","stringify","config","method","res","encodeFileToBase64","fileBlob","reader","FileReader","readAsDataURL","Promise","resolve","onload","result","House_register","alert","undefined","resl","methods","mintNFT","send","from","gas","events","Transfer","returnValues","tokenId","emit","CheckBoxBool","mb","my","xs","md","p","minWidth","e","target","value","height","display","pt","justifyContent","mt","ml"],"sources":["C:/Users/user/Desktop/2022/main/Front/client/src/component/page/registration/HouseInfoInsert.jsx"],"sourcesContent":["//#region react\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from \"react-router\";\nimport io from \"socket.io-client\";\n//#endregion\n\n//#region mui\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport images1 from '../../images/house.jpg'\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\n//#endregion\n\n//#region 라이브러리\nimport axios from 'axios';\nimport FormData from 'form-data';\nimport Web3 from 'web3';\n//#endregion\n\nimport NFT from \"../../../contracts/NFT.json\";\n\n//#region 전역 변수\nlet socket;\nlet NFT_Hash;\nlet web3;\nlet NFT_instance;\n//#endregion\n\nfunction HouseInfo_insert() {\n\n  const ENDPOINT = \"http://localhost:8080\";\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  //#region uesState 변수\n  const [selluserId] = useState(location.state[0].id);\n  const [sellusername] = useState(location.state[0].name);\n  const [sellusernumber] = useState(location.state[0].number);\n  const [sellerMetaAddress] = useState(location.state[0].MetaMaskAcc);\n\n  const [area, setArea] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [agree, setAgree] = useState(false);\n  const [price, setPrice] = useState();\n\n  const [files, setFiles] = useState(images1);\n\n  const [file, setFile] = useState();\n  const [accounts, setAccounts] = useState(\"\");\n  //#endregion\n\n  //#region useEffect\n  useEffect(() => {\n    async function load() {\n      web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');\n      setAccounts(await web3.eth.getAccounts());\n\n      const networkId = await web3.eth.net.getId();\n      const NFTNetwork = NFT.networks[networkId];\n\n      NFT_instance = new web3.eth.Contract(NFT.abi, NFTNetwork.address);\n      console.log(NFT_instance);\n    }\n\n    load();\n  }, []);\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n  }, []);\n  //#endregion\n\n  //#region 이미지 업로드\n  const handleFile = async (fileToHandle) => {\n    console.log('starting');\n\n    const formData = new FormData();\n    formData.append(\"file\", fileToHandle);\n\n    const filename = fileToHandle.name;      //파일 이름.확장자\n    const filenameStr = filename.split('.'); //파일이름\n\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS` //파일 올리는 URL\n\n    const response = await axios.post(\n      url,\n      formData,\n      {\n        maxContentLength: \"Infinity\",\n        headers: {\n          'Content-Type': `multipart/form-data;boundary=${formData._boundary}`,\n          'pinata_api_key': '97f3182c5eaaa5c01af0',\n          'pinata_secret_api_key': '23a31aa6f14b878f66c3f3b4f639f03e8619b1851e872d99793680db7550ae7b',\n        }\n      }\n    );\n    console.log(response);\n    Make_Json(filenameStr[0], response.data.IpfsHash); //response.data.IpfsHash : 매물 해시값\n  }\n  //#endregion\n\n  //#region 제이슨 파일 업로드\n  const Make_Json = async (filenameStr, img_cid) => {\n\n    //#region JSON 변환\n    var data = JSON.stringify({\n      \"pinataOptions\": {\n        \"cidVersion\": 1\n      },\n      \"pinataMetadata\": {\n        \"name\": `${filenameStr}.json`,\n        \"Address\": \"우송대학교\",\n        \"Price\": \"1\",\n        \"keyvalues\": {\n          \"customKey\": \"customValue\",\n          \"customKey2\": \"customValue2\"\n        }\n      },\n      \"pinataContent\": {\n        \"img\": `ipfs://${img_cid}`,\n        \"description\": \"위베어베어스\",\n      }\n    });\n    //#endregion\n\n    var config = {\n      method: 'post',\n      url: 'https://api.pinata.cloud/pinning/pinJSONToIPFS',  //JSON 올리는 URL\n      headers: {\n        'Content-Type': 'application/json',\n        'pinata_api_key': '97f3182c5eaaa5c01af0',\n        'pinata_secret_api_key': '23a31aa6f14b878f66c3f3b4f639f03e8619b1851e872d99793680db7550ae7b',\n      },\n      data: data\n    };\n\n    const res = await axios(config);\n\n    console.log(res.data);\n    NFT_Hash = res.data.IpfsHash;  //JSON 해쉬 값\n  }\n  //#endregion\n\n  //#region 이미지 인코딩\n  const encodeFileToBase64 = (fileBlob) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(fileBlob);\n\n    return new Promise((resolve) => {\n      reader.onload = () => {\n        setFiles(reader.result);\n        resolve();\n      };\n    });\n  };\n  //#endregion\n\n  //#region 매물등록\n  async function House_register() {\n\n    if (agree === false) {\n      alert(\"개인정보 동의를 하세요\");\n    }\n    else if (area === \"\" || address === \"\") {\n      alert(\"입력하지 않은 정보가 있습니다\");\n    }\n    else if (NFT_Hash === undefined || NFT_Hash === null || NFT_Hash === \"\") {\n      alert(\"잠시만 기달려주세요\")\n    }\n    else {\n      console.log(NFT_Hash)\n      const resl = await NFT_instance.methods.mintNFT(accounts[0], `ipfs://${NFT_Hash}`).send({\n        from: accounts[0],\n        gas: 5000000\n      });\n      const res = resl.events.Transfer.returnValues.tokenId\n      socket.emit(\"House_Register\", { area, address, price, files, selluserId, sellusername, sellusernumber, sellerMetaAddress, NFT_Hash, res });\n      alert(\"등록 완료!\");\n      navigate(\"/post-MainPage\", { state: location.state });\n    }\n  }\n  //#endregion\n\n  //#region 동의여부\n  function CheckBoxBool() {\n    if (agree === false) {\n      setAgree(true);\n    }\n    else if (agree === true) {\n      setAgree(false);\n    }\n  }\n  //#endregion\n\n  //#region 렌더링\n  return (\n    <Container component=\"main\" maxWidth=\"sm\" sx={{ mb: 4 }}>\n      <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\n        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n          판매 등록\n        </Typography>\n        <br />\n        <React.Fragment>\n          <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>\n              집 정보 등록\n            </Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Box sx={{ minWidth: 200 }}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">지역</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      label=\"locationv\"\n                      value={area}\n                      onChange={(e) =>\n                        setArea(e.target.value)\n                      }\n                    >\n                      <MenuItem value={\"대전\"}>대전</MenuItem>\n                      <MenuItem value={\"서울\"}>서울</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Box>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  id=\"houseAddress\"\n                  label=\"집주소\"\n                  fullWidth\n                  variant=\"standard\"\n                  onChange={(e) => {\n                    setAddress(e.target.value)\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  id=\"houseprice\"\n                  label=\"가격 (ETH)\"\n                  fullWidth\n                  variant=\"standard\"\n                  onChange={(e) => {\n                    setPrice(e.target.value)\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Card\n                  sx={{ height: '100%', display: 'flex' }}\n                >\n                  <CardMedia\n                    component=\"img\"\n                    sx={{\n                      // 16:9\n                      pt: '5%',\n                    }}\n                    image={files}\n                    alt=\"random\"\n                  />\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Button\n                  variant=\"contained\"\n                  component=\"label\"\n                >\n                  사진올리기\n                  <input\n                    type=\"file\"\n                    hidden\n                    onChange={(e) => {\n                      encodeFileToBase64(e.target.files[0])\n                      setFile(e.target.files[0])\n                    }}\n                  />\n                </Button>&nbsp;\n                {/* <input type=\"file\" onChange={(event)=>setFile(event.target.files[0])}/> */}\n                <Button variant=\"contained\" onClick={() => handleFile(file)}>IPFS등록</Button>\n                {/* {\n                  //  render the hash\n                  myipfsHash.length > 0 && <img height='200' src={`https://gateway.pinata.cloud/ipfs/${myipfsHash}`} alt='not loading'/>\n                } */}\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox color=\"secondary\" onClick={CheckBoxBool} />}\n                  label=\"판매 게시글에 올리시겠습니까?\"\n                />\n              </Grid>\n            </Grid>\n          </React.Fragment>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Button\n              variant=\"contained\"\n              sx={{ mt: 3, ml: 1 }}\n              onClick={House_register}\n            >등록\n            </Button>\n          </Box>\n        </React.Fragment>\n      </Paper>\n    </Container>\n  );\n  //#endregion\n}\n\nexport default HouseInfo_insert;"],"mappings":"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"},"metadata":{},"sourceType":"module"}