{"ast":null,"code":"import { Arbitrary } from './Arbitrary.js';\nimport { Shrinkable } from './Shrinkable.js';\n\nfunction removeContextFromContextualValue(contextualValue) {\n  return contextualValue[0];\n}\n\nclass ArbitraryWithContextualShrink extends Arbitrary {\n  contextualShrinkableFor(value, context) {\n    return new Shrinkable(value, () => this.contextualShrink(value, context).map(contextualValue => this.contextualShrinkableFor(contextualValue[0], contextualValue[1])));\n  }\n\n  shrink(value, shrunkOnce) {\n    const context = shrunkOnce === true ? this.shrunkOnceContext() : undefined;\n    return this.contextualShrink(value, context).map(removeContextFromContextualValue);\n  }\n\n  shrinkableFor(value, shrunkOnce) {\n    return new Shrinkable(value, () => {\n      return this.shrink(value, shrunkOnce).map(value => this.shrinkableFor(value, true));\n    });\n  }\n\n}\n\nexport { ArbitraryWithContextualShrink };","map":{"version":3,"names":["Arbitrary","Shrinkable","removeContextFromContextualValue","contextualValue","ArbitraryWithContextualShrink","contextualShrinkableFor","value","context","contextualShrink","map","shrink","shrunkOnce","shrunkOnceContext","undefined","shrinkableFor"],"sources":["C:/Users/cyr50/OneDrive/바탕 화면/비트고급 프로젝트_tuffle/Front/client/node_modules/fast-check/lib/esm/check/arbitrary/definition/ArbitraryWithContextualShrink.js"],"sourcesContent":["import { Arbitrary } from './Arbitrary.js';\nimport { Shrinkable } from './Shrinkable.js';\nfunction removeContextFromContextualValue(contextualValue) {\n    return contextualValue[0];\n}\nclass ArbitraryWithContextualShrink extends Arbitrary {\n    contextualShrinkableFor(value, context) {\n        return new Shrinkable(value, () => this.contextualShrink(value, context).map((contextualValue) => this.contextualShrinkableFor(contextualValue[0], contextualValue[1])));\n    }\n    shrink(value, shrunkOnce) {\n        const context = shrunkOnce === true ? this.shrunkOnceContext() : undefined;\n        return this.contextualShrink(value, context).map(removeContextFromContextualValue);\n    }\n    shrinkableFor(value, shrunkOnce) {\n        return new Shrinkable(value, () => {\n            return this.shrink(value, shrunkOnce).map((value) => this.shrinkableFor(value, true));\n        });\n    }\n}\nexport { ArbitraryWithContextualShrink };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AACA,SAASC,gCAAT,CAA0CC,eAA1C,EAA2D;EACvD,OAAOA,eAAe,CAAC,CAAD,CAAtB;AACH;;AACD,MAAMC,6BAAN,SAA4CJ,SAA5C,CAAsD;EAClDK,uBAAuB,CAACC,KAAD,EAAQC,OAAR,EAAiB;IACpC,OAAO,IAAIN,UAAJ,CAAeK,KAAf,EAAsB,MAAM,KAAKE,gBAAL,CAAsBF,KAAtB,EAA6BC,OAA7B,EAAsCE,GAAtC,CAA2CN,eAAD,IAAqB,KAAKE,uBAAL,CAA6BF,eAAe,CAAC,CAAD,CAA5C,EAAiDA,eAAe,CAAC,CAAD,CAAhE,CAA/D,CAA5B,CAAP;EACH;;EACDO,MAAM,CAACJ,KAAD,EAAQK,UAAR,EAAoB;IACtB,MAAMJ,OAAO,GAAGI,UAAU,KAAK,IAAf,GAAsB,KAAKC,iBAAL,EAAtB,GAAiDC,SAAjE;IACA,OAAO,KAAKL,gBAAL,CAAsBF,KAAtB,EAA6BC,OAA7B,EAAsCE,GAAtC,CAA0CP,gCAA1C,CAAP;EACH;;EACDY,aAAa,CAACR,KAAD,EAAQK,UAAR,EAAoB;IAC7B,OAAO,IAAIV,UAAJ,CAAeK,KAAf,EAAsB,MAAM;MAC/B,OAAO,KAAKI,MAAL,CAAYJ,KAAZ,EAAmBK,UAAnB,EAA+BF,GAA/B,CAAoCH,KAAD,IAAW,KAAKQ,aAAL,CAAmBR,KAAnB,EAA0B,IAA1B,CAA9C,CAAP;IACH,CAFM,CAAP;EAGH;;AAZiD;;AActD,SAASF,6BAAT"},"metadata":{},"sourceType":"module"}