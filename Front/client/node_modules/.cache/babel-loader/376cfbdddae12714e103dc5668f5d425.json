{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\2022\\\\main\\\\Front\\\\client\\\\src\\\\component\\\\ui\\\\Mypage_TransactionCard.jsx\",\n    _s = $RefreshSig$();\n\n//#region react\nimport React, { useState, useEffect } from 'react'; //#endregion\n//#region mui\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardMedia from '@mui/material/CardMedia';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button'; //#endregion\n//#region 라이브러리\n\nimport Web3 from 'web3';\nimport NFTContract from '../../contracts/NFT.json'; //#endregion\n//#region 전역변수\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet web3;\nlet NFTinstance; //#endregion\n\nfunction Mypage_BuyCard(props) {\n  _s();\n\n  const {\n    cards,\n    username\n  } = props;\n  const [accounts, setAccounts] = useState(\"\");\n  useEffect(() => {\n    async function load() {\n      web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');\n      setAccounts(await web3.eth.getAccounts());\n      const networkId = await web3.eth.net.getId();\n      const NFTdeployedNetwork = NFTContract.networks[networkId];\n      NFTinstance = new web3.eth.Contract(NFTContract.abi, NFTdeployedNetwork.address);\n    }\n\n    load(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  });\n\n  function UserNameCard(card) {\n    if (card.sellerName === username) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        sm: 6,\n        md: 2.9,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            sx: {\n              // 16:9\n              pt: '0%',\n              maxWidth: 250,\n              minWidth: 250,\n              minHeight: 150,\n              maxHeight: 150\n            },\n            src: card.sellerImg,\n            alt: \"random\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: 14\n              },\n              gutterBottom: true,\n              children: [\"\\uC8FC\\uC18C : \", card.houseAddress]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: 14\n              },\n              gutterBottom: true,\n              children: [\"\\uAC00\\uACA9 : \", card.housePrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: 14\n              },\n              gutterBottom: true,\n              children: [\"\\uAD6C\\uB9E4\\uC790 : \", card.buyerName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: 14\n              },\n              gutterBottom: true,\n              children: [\"\\uD310\\uB9E4\\uC790 : \", card.sellerName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: 14\n              },\n              gutterBottom: true,\n              children: [\"NFTID : \", card.tokkenId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flexGrow: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              onClick: () => {\n                NFTinstance.methods.safeTransferFrom(accounts[0], card.buyerAddress, card.tokkenId).send({\n                  from: accounts[0],\n                  gas: 5000000\n                });\n                alert(\"구매완료\");\n                window.location.replace(\"/post-UserMyPage\");\n              },\n              children: \"\\uAC70\\uB798 \\uC2B9\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, card.houseAddress, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    }\n  } //#region 렌더링\n\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 4,\n    children: cards.map(card => UserNameCard(card))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this); //#endregion\n}\n\n_s(Mypage_BuyCard, \"IMqEv5g/X3beAeVacG91s+NqMlQ=\");\n\n_c = Mypage_BuyCard;\nexport default Mypage_BuyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mypage_BuyCard\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardActions","CardMedia","Grid","Box","CardContent","Typography","Button","Web3","NFTContract","web3","NFTinstance","Mypage_BuyCard","props","cards","username","accounts","setAccounts","load","givenProvider","eth","getAccounts","networkId","net","getId","NFTdeployedNetwork","networks","Contract","abi","address","UserNameCard","card","sellerName","height","display","flexDirection","pt","maxWidth","minWidth","minHeight","maxHeight","sellerImg","fontSize","houseAddress","housePrice","buyerName","tokkenId","flexGrow","methods","safeTransferFrom","buyerAddress","send","from","gas","alert","window","location","replace","map"],"sources":["C:/Users/user/Desktop/2022/main/Front/client/src/component/ui/Mypage_TransactionCard.jsx"],"sourcesContent":["//#region react\r\nimport React, { useState, useEffect } from 'react';\r\n//#endregion\r\n\r\n//#region mui\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\n//#endregion\r\n\r\n//#region 라이브러리\r\nimport Web3 from 'web3';\r\nimport NFTContract from '../../contracts/NFT.json'\r\n//#endregion\r\n\r\n//#region 전역변수\r\nlet web3;\r\nlet NFTinstance;\r\n//#endregion\r\n\r\nfunction Mypage_BuyCard(props) {\r\n    const { cards, username } = props;\r\n    const [accounts, setAccounts] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function load() {\r\n            web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');\r\n            setAccounts(await web3.eth.getAccounts());\r\n            const networkId = await web3.eth.net.getId();\r\n            const NFTdeployedNetwork = NFTContract.networks[networkId];\r\n            NFTinstance = new web3.eth.Contract(NFTContract.abi, NFTdeployedNetwork.address);\r\n        }\r\n        load();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    })\r\n\r\n    function UserNameCard(card) {\r\n        if (card.sellerName === username) {\r\n            return (\r\n                <Grid item xs={5} sm={6} md={2.9} key={card.houseAddress}>\r\n                    <Card\r\n                        sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n                    >\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            sx={{\r\n                                // 16:9\r\n                                pt: '0%',\r\n                                maxWidth: 250,\r\n                                minWidth: 250,\r\n                                minHeight: 150,\r\n                                maxHeight: 150\r\n                            }}\r\n                            src={card.sellerImg}\r\n                            alt=\"random\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography sx={{ fontSize: 14 }} gutterBottom>\r\n                                주소 : {card.houseAddress}\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 14 }} gutterBottom>\r\n                                가격 : {card.housePrice}\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 14 }} gutterBottom>\r\n                                구매자 : {card.buyerName}\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 14 }} gutterBottom>\r\n                                판매자 : {card.sellerName}\r\n                            </Typography>\r\n                            <Typography sx={{ fontSize: 14 }} gutterBottom>\r\n                                NFTID : {card.tokkenId}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Box sx={{ flexGrow: 1 }} />\r\n                            <Button size=\"small\" onClick={() => {\r\n                                NFTinstance.methods.safeTransferFrom(accounts[0], card.buyerAddress, card.tokkenId).send({\r\n                                    from: accounts[0],\r\n                                    gas: 5000000\r\n                                })\r\n                                alert(\"구매완료\")\r\n                                window.location.replace(\"/post-UserMyPage\")\r\n                            }}>거래 승인</Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n    //#region 렌더링\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {cards.map((card) => (\r\n                UserNameCard(card)\r\n            ))}\r\n        </Grid>)\r\n    //#endregion\r\n}\r\n\r\nexport default Mypage_BuyCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}