{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afaf5\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uCD5C\\uC885\\uBCF8\\\\react-BlockChain\\\\Front\\\\client\\\\src\\\\component\\\\ui\\\\Chatting.jsx\",\n    _s = $RefreshSig$();\n\n//#region react\nimport React, { useState, useEffect } from 'react'; // import Modal from 'react-modal';\n//#endregion\n//#region mui\n\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport SendIcon from '@mui/icons-material/Send';\nimport io from \"socket.io-client\";\nimport LogText from \"./LogText\";\nimport Box from '@mui/material/Box'; //#endregion\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  bgcolor: 'background.paper',\n  height: '80%',\n  width: '40%',\n  border: '2px solid #000',\n  pt: 2,\n  px: 4,\n  pb: 3 // overflow:'scroll',\n\n};\nlet socket;\n\nfunction Chatting(props) {\n  _s();\n\n  const ENDPOINT = \"http://localhost:8080\";\n  const {\n    value,\n    buyername\n  } = props;\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [chatlog, setChatlog] = useState([{}]);\n  const [sendmsg, setSendMsg] = useState(\"\");\n  const [RoomNumber] = useState(value);\n  let roomnumber = 0; // 함수가 실행될때 modal의 상태를 true로 바꿔준다.\n\n  function openModal() {\n    roomnumber = RoomNumber;\n    socket.emit(\"Chatting_Join\", {\n      roomnumber\n    });\n    socket.on('Join_return', _ref => {\n      let {\n        roomnumber\n      } = _ref;\n      console.log(`${roomnumber}번에 참가하였습니다.`);\n    });\n    socket.emit(\"Load_Msg_Chat\", {\n      RoomNumber\n    });\n    socket.on('Return_Load_Msg_Chat', _ref2 => {\n      let {\n        result\n      } = _ref2;\n      setChatlog(result); //setChatlog([...chatlog, { name: Oname, msg: sendmsg }]);\n    });\n    setIsOpen(true);\n  } // 함수가 실행될때 modal의 상태를 false로 바꿔준다.\n\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  useEffect(() => {\n    socket = io(ENDPOINT); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ENDPOINT]);\n  useEffect(() => {\n    socket.on(\"Msg_return\", _ref3 => {\n      let {\n        buyername,\n        sendmsg\n      } = _ref3;\n      console.log(\"채팅 전송 완료\");\n      setChatlog([...chatlog, {\n        name: buyername,\n        msg: sendmsg\n      }]);\n    });\n\n    if (chatlog.length !== 0 && chatlog.length !== 1) {\n      socket.emit(\"Save_Msg\", {\n        chatlog,\n        RoomNumber\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [chatlog]);\n\n  function SendMessage() {\n    socket.emit(\"Message_Send\", {\n      buyername,\n      sendmsg,\n      RoomNumber\n    });\n    setSendMsg(\" \");\n  }\n\n  function OnkeyPress(e) {\n    if (e.key === 'Enter') {\n      SendMessage();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: openModal,\n      children: \"Chatting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      hideBackdrop: true,\n      open: modalIsOpen,\n      onClose: closeModal,\n      \"aria-labelledby\": \"child-modal-title\",\n      \"aria-describedby\": \"child-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: { ...style\n        },\n        children: [/*#__PURE__*/_jsxDEV(LogText, {\n          log: chatlog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"Message\",\n          label: \"Message\",\n          name: \"Message\",\n          autoComplete: \"Message\",\n          autoFocus: true,\n          value: sendmsg,\n          onChange: e => setSendMsg(e.target.value),\n          onKeyUp: OnkeyPress,\n          className: \"modal-dialog modal-dialog-scrollable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          disableElevation: true,\n          variant: \"contained\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => {\n              closeModal();\n            },\n            children: \"CLOSE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 62\n            }, this),\n            onClick: SendMessage,\n            children: \"SEND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chatting, \"SQcQraRZ+CfgbZJFb3j6O5VrrZs=\");\n\n_c = Chatting;\nexport default Chatting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatting\");","map":{"version":3,"names":["React","useState","useEffect","ButtonGroup","Modal","Button","TextField","SendIcon","io","LogText","Box","style","position","top","left","transform","bgcolor","height","width","border","pt","px","pb","socket","Chatting","props","ENDPOINT","value","buyername","modalIsOpen","setIsOpen","chatlog","setChatlog","sendmsg","setSendMsg","RoomNumber","roomnumber","openModal","emit","on","console","log","result","closeModal","name","msg","length","SendMessage","OnkeyPress","e","key","target"],"sources":["C:/Users/afaf5/OneDrive/바탕 화면/최종본/react-BlockChain/Front/client/src/component/ui/Chatting.jsx"],"sourcesContent":["//#region react\nimport React, { useState, useEffect } from 'react';\n// import Modal from 'react-modal';\n//#endregion\n\n//#region mui\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport SendIcon from '@mui/icons-material/Send';\nimport io from \"socket.io-client\";\nimport LogText from \"./LogText\"\nimport Box from '@mui/material/Box';\n//#endregion\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    bgcolor: 'background.paper',\n    height: '80%',\n    width: '40%',\n    border: '2px solid #000',\n    pt: 2,\n    px: 4,\n    pb: 3,\n    // overflow:'scroll',\n};\n\nlet socket;\n\nfunction Chatting(props) {\n\n    const ENDPOINT = \"http://localhost:8080\";\n\n    const { value, buyername } = props\n\n    const [modalIsOpen, setIsOpen] = useState(false);\n    const [chatlog, setChatlog] = useState([{}]);\n    const [sendmsg, setSendMsg] = useState(\"\");\n    const [RoomNumber] = useState(value);\n\n    let roomnumber = 0;\n\n    // 함수가 실행될때 modal의 상태를 true로 바꿔준다.\n    function openModal() {\n        roomnumber = RoomNumber;\n        socket.emit(\"Chatting_Join\", { roomnumber });\n        socket.on('Join_return', ({ roomnumber }) => {\n            console.log(`${roomnumber}번에 참가하였습니다.`);\n        })\n        socket.emit(\"Load_Msg_Chat\", { RoomNumber });\n        socket.on('Return_Load_Msg_Chat', ({ result }) => {\n            setChatlog(result);\n            //setChatlog([...chatlog, { name: Oname, msg: sendmsg }]);\n        })\n        setIsOpen(true);\n    }\n\n    // 함수가 실행될때 modal의 상태를 false로 바꿔준다.\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n\n    useEffect(() => {\n        socket = io(ENDPOINT);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ENDPOINT]);\n\n    useEffect(() => {\n\n        socket.on(\"Msg_return\", ({ buyername, sendmsg }) => {\n            console.log(\"채팅 전송 완료\");\n            setChatlog([...chatlog, { name: buyername, msg: sendmsg }]);\n        })\n        if (chatlog.length !== 0 && chatlog.length !== 1) {\n            socket.emit(\"Save_Msg\", ({ chatlog, RoomNumber }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [chatlog]);\n\n    function SendMessage() {\n        socket.emit(\"Message_Send\", { buyername, sendmsg, RoomNumber });\n        setSendMsg(\" \");\n    }\n\n    function OnkeyPress (e){\n        if(e.key === 'Enter'){\n            SendMessage();\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Button onClick={openModal}>Chatting</Button>\n            <Modal\n                hideBackdrop\n                open={modalIsOpen}\n                onClose={closeModal}\n                aria-labelledby=\"child-modal-title\"\n                aria-describedby=\"child-modal-description\"\n            >\n                <Box sx={{ ...style }}>\n                    <LogText log={chatlog} ></LogText>\n                    <TextField\n                        margin='normal'\n                        required\n                        fullWidth\n                        id=\"Message\"\n                        label=\"Message\"\n                        name=\"Message\"\n                        autoComplete=\"Message\"\n                        autoFocus\n                        value={sendmsg}\n                        onChange={(e) => setSendMsg(e.target.value)}\n                        onKeyUp={OnkeyPress}\n                        className=\"modal-dialog modal-dialog-scrollable\"\n                    />\n                    <ButtonGroup disableElevation variant=\"contained\">\n                        <Button variant=\"contained\" onClick={() => { closeModal() }}>CLOSE</Button>\n                        <Button variant=\"contained\" endIcon={<SendIcon />} onClick={SendMessage} >SEND</Button>\n                    </ButtonGroup>\n                </Box>\n            </Modal>\n        </React.Fragment>\n    );\n}\n\nexport default Chatting;"],"mappings":"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"},"metadata":{},"sourceType":"module"}