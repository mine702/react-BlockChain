{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\2022\\\\Truffle-React\\\\front\\\\client\\\\src\\\\component\\\\ui\\\\Mainpage_Card.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-pascal-case */\n//#region react\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\"; //#endregion\n//#region mui\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardMedia from '@mui/material/CardMedia';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box'; //#endregion\n\nimport Notify_Dialog from \"./Notify_Dialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Mainpage_Card(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    cards,\n    user,\n    value\n  } = props;\n  var buy_State = 'buy_Impossible';\n\n  function buy_States(card) {\n    console.log(value[i].houseAddress);\n\n    for (let i = 0; i < value.length; i++) {\n      if (value[i].houseAddress == card.houseAddress) {\n        console.log(\"판매완료\");\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 5,\n      sm: 6,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          sx: {\n            // 16:9\n            pt: '0%',\n            minHeight: 170,\n            maxHeight: 170\n          },\n          src: card.files,\n          alt: \"random\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: {\n              buy_Possible: /*#__PURE__*/_jsxDEV(Notify_Dialog, {\n                warningHead: \"구매 확인\",\n                warningButton: \"구매\",\n                warning: \"정말 구매하시겠습니까?\",\n                value: [card, user]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 51\n              }, this),\n              buy_Impossible: /*#__PURE__*/_jsxDEV(Notify_Dialog, {\n                warningButton: \"판매완료\",\n                warning: \"판매 완료된 매물입니다.\",\n                value: [card, user]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 53\n              }, this)\n            }[buy_State]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: () => {\n              navigate(\"/post-HouseInfoPage\", {\n                state: [card, user]\n              });\n            },\n            children: \"\\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, card._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 4,\n    children: cards.map(card => buy_States(card))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mainpage_Card, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Mainpage_Card;\nexport default Mainpage_Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainpage_Card\");","map":{"version":3,"names":["React","useNavigate","Card","CardActions","CardMedia","Grid","Button","Box","Notify_Dialog","Mainpage_Card","props","navigate","cards","user","value","buy_State","buy_States","card","console","log","i","houseAddress","length","height","display","flexDirection","pt","minHeight","maxHeight","files","flexGrow","buy_Possible","buy_Impossible","state","_id","map"],"sources":["C:/Users/user/Desktop/2022/Truffle-React/front/client/src/component/ui/Mainpage_Card.jsx"],"sourcesContent":["/* eslint-disable react/jsx-pascal-case */\r\n//#region react\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//#endregion\r\n\r\n//#region mui\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\n//#endregion\r\n\r\nimport Notify_Dialog from \"./Notify_Dialog\";\r\n\r\nfunction Mainpage_Card(props) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { cards, user, value } = props;\r\n\r\n    var buy_State = 'buy_Impossible'\r\n\r\n    function buy_States(card) {\r\n        console.log(value[i].houseAddress)\r\n        for (let i = 0; i < value.length; i++) {\r\n            if (value[i].houseAddress == card.houseAddress) {\r\n                console.log(\"판매완료\")\r\n            }\r\n            \r\n        }\r\n        return (\r\n            <Grid item xs={5} sm={6} md={4} key={card._id}>\r\n                <Card\r\n                    sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n                >\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        sx={{\r\n                            // 16:9\r\n                            pt: '0%',\r\n                            minHeight: 170,\r\n                            maxHeight: 170\r\n                        }}\r\n                        src={card.files}\r\n                        alt=\"random\"\r\n                    />\r\n                    <CardActions>\r\n                        <Box sx={{ flexGrow: 1 }} />\r\n                        <div>\r\n                            {\r\n\r\n                                {\r\n                                    buy_Possible: <Notify_Dialog\r\n                                        warningHead={\"구매 확인\"}\r\n                                        warningButton={\"구매\"}\r\n                                        warning={\"정말 구매하시겠습니까?\"}\r\n                                        value={[card, user]}\r\n\r\n                                    ></Notify_Dialog>,\r\n                                    buy_Impossible: <Notify_Dialog\r\n                                        warningButton={\"판매완료\"}\r\n                                        warning={\"판매 완료된 매물입니다.\"}\r\n                                        value={[card, user]}\r\n                                    ></Notify_Dialog>\r\n                                }[buy_State]\r\n                            }\r\n                        </div>\r\n                        <Button size=\"small\" onClick={() => {\r\n                            navigate(\"/post-HouseInfoPage\", { state: [card, user] });\r\n                        }}>보기</Button>\r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {cards.map((card) => (\r\n                buy_States(card)\r\n            ))}\r\n        </Grid>)\r\n}\r\n\r\nexport default Mainpage_Card;"],"mappings":"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"},"metadata":{},"sourceType":"module"}